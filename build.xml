<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="compile" name="OperaDriver">

  <!-- Location of the selenium source. Used to generate docs and inherit
  the javadoc -->
  <property name="selenium.src" value="../selenium/java/client/src" />

  <!-- Get version from Git, and output it to the VERSION file.
       This file is later copied to other locations. -->
  <exec executable="git" outputproperty="version" failifexecutionfails="false">
    <arg value="describe" />
  </exec>
  <!-- If we can't get the version from git, set a default  -->
  <property name="version" value="UNKNOWN-VERSION" />
  <echo message="${version}" file="VERSION" />

  <!-- Variables  -->

  <property name="jar.filename" value="webdriver-opera-${version}.jar" />
  <property name="jar.path" value="pkg/${jar.filename}" />

  <path id="classpath.path">
    <pathelement location="bin" />
    <fileset dir="lib" includes="**/*.jar" />
  </path>
  <path id="test.classpath.path">
    <fileset file="${jar.path}"/>
    <fileset dir="lib" includes="**/*.jar" />
  </path>

  <path id="test.dir.path">
    <pathelement location="test/com/opera/core/systems" />
  </path>
  <property name="test.output.path" value="test-output" />
  <property name="test.report.path" value="test-reports" />


  <!--  Targets  -->

  <!-- Delete the bin and pkg dirs -->
  <target name="clean" description="Delete all generated files">
    <delete dir="bin" />
    <delete>
      <fileset dir="." includes="**/*.class"/>
      <fileset dir="." includes="**/test_apc.txt"/>
    </delete>
    <delete dir="pkg" />
    <delete dir="docs" />
    <delete dir="${test.output.path}" />
    <delete dir="${test.report.path}" />
    <delete dir="release" />
  </target>

  <!-- Compile all classes after cleaning-->
  <target name="compile" description="Compile all the source files">
    <fileset dir="bin" />
    <mkdir dir="bin" />
    <copy file="VERSION" todir="bin" />

    <copy includeemptydirs="false" todir="bin">
      <fileset dir="src">
      	<exclude name="**/*.launch" />
      	<exclude name="**/*.java" />
      </fileset>
    </copy>

    <javac debug="true" destdir="bin" includeantruntime="false">
      <src path="src" />
      <classpath refid="classpath.path" />
    </javac>
  </target>

  <!-- Build the jar -->
  <target name="jar" description="Make a JAR file including launchers" depends="compile">
    <mkdir dir="pkg" />

    <jar destfile="${jar.path}">
      <fileset dir="bin" includes="**/*.class" />
      <fileset dir="bin" includes="**/*.properties" />
      <fileset dir="." includes="launcher/*" />
      <fileset file="VERSION" />
      <manifest>
      	<attribute name="Main-Class" value="com.opera.core.systems.OperaDriver" />
      	<attribute name="Implementation-Version" value="${version}" />
      </manifest>
    </jar>
  </target>

  <target name="jar_internal" description="Make an internal JAR allowing click of disabled elements">
    <replace file="src/com/opera/core/systems/scope/internal/OperaFlags.java" token="ENABLE_CHECKS = true" value="ENABLE_CHECKS = false" />
    <antcall target="jar" inheritAll="false">
      <param  name="version" value="${version}-internal" />
    </antcall>
    <replace file="src/com/opera/core/systems/scope/internal/OperaFlags.java" token="ENABLE_CHECKS = false" value="ENABLE_CHECKS = true" />
  </target>

  <!-- Compile any modified classes including test classes -->
  <target name="compile_tests">
    <javac debug="true" destdir="test" includeantruntime="false">
      <src path="test" />
      <classpath refid="test.classpath.path" />
    </javac>
  </target>

  <!-- Run all junit tests -->
  <target name="test" description="Run all tests on the JAR. Pass -Dclass=&lt;classname&gt; to only run one test" depends="jar, compile_tests">
    <delete dir="${test.output.path}" />
    <mkdir  dir="${test.output.path}" />
    <delete dir="${test.report.path}" />
    <mkdir  dir="${test.report.path}" />

    <junit fork="yes" haltonfailure="no" printsummary="yes" showoutput="yes" outputtoformatters="no">
      <formatter type="xml" usefile="true" />
      <classpath refid="test.classpath.path" />
      <classpath location="test" />

      <!-- run all of the tests -->
      <batchtest unless="class" todir="${test.output.path}">
        <fileset dir="test" includes="**/*Test.class" />
      </batchtest>

      <!-- run just one file/class. Happens when -Dfile=<file> is passed -->
      <test if="class" todir="${test.output.path}" name="${class}" />
    </junit>

    <junitreport todir="${test.output.path}">
      <fileset dir="${test.output.path}"/>
      <report todir="${test.report.path}"/>
    </junitreport>
    <fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
  </target>

  <!-- Generate the docs. This will output lots of errors and warnings, but
  that's okay because they're (mostly) from selenium, not OperaDriver -->
  <target name="doc" description="Generate the Javadocs">
    <javadoc destdir="docs" doctitle="OperaDriver" access="public" author="true">
      <classpath>
        <!-- Include all the jars except selenium, as we're getting the docs
        straight from the source -->
        <dirset dir="lib">
          <include name="*.jar"/>
          <exclude name="selenium-common.jar"/>
        </dirset>
      </classpath>

      <!-- include our source, and the selenium source so that we can inherit
      the javadocs -->
      <sourcepath>
        <pathelement location="src" />
        <pathelement location="${selenium.src}" />
      </sourcepath>

      <!-- only generate docs for Opera stuff, not selenium as well -->
      <package name="com.opera.core.systems.*" />

      <!-- Link to online selenium documentation, and the Java docs -->
      <link href="http://webdriver.googlecode.com/svn/javadoc/"/>
      <link href="http://download.oracle.com/javase/1.5.0/docs/api/"/>
    </javadoc>
  </target>

  <target name="example" description="Run the simple example" depends="jar">
    <javac>
      <classpath refid="test.classpath.path" />
      <src path="examples/simple" />
    </javac>
    <java classname="Example" fork="yes">
      <classpath refid="test.classpath.path" />
      <classpath location="examples/simple" />
    </java>
  </target>

  <target name="release" description="Generate a ZIP for release including the JAR, docs and examples" depends="clean,jar,doc">
    <mkdir dir="release" />
    <property name="release-zip.name" value="operadriver-${version}" />
    <zip destfile="release/${release-zip.name}.zip">
      <!-- Add the docs -->
      <zipfileset prefix="${release-zip.name}/docs" dir="docs/" />
      <!-- Add the examples -->
      <zipfileset prefix="${release-zip.name}/examples" dir="examples/" />
      <!-- add OperaDriver jar to the lib directory -->
      <zipfileset prefix="${release-zip.name}/lib" dir="pkg" />
      <!-- Add all the jar libs -->
      <zipfileset prefix="${release-zip.name}/lib" dir="lib" excludes="junit*.jar"/>
      <zipfileset prefix="${release-zip.name}" dir="." includes="README.txt CHANGES.txt AUTHORS.txt LICENSE.txt VERSION"/>
    </zip>
  </target>
</project>
