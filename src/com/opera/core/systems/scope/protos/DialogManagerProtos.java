// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dialog_manager.proto

package com.opera.core.systems.scope.protos;

public final class DialogManagerProtos {
  private DialogManagerProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ListDialogsArg extends
      com.google.protobuf.GeneratedMessage {
    // Use ListDialogsArg.newBuilder() to construct.
    private ListDialogsArg() {
      initFields();
    }
    private ListDialogsArg(boolean noInit) {}
    
    private static final ListDialogsArg defaultInstance;
    public static ListDialogsArg getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListDialogsArg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_ListDialogsArg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_ListDialogsArg_fieldAccessorTable;
    }
    
    // optional uint32 windowID = 1;
    public static final int WINDOWID_FIELD_NUMBER = 1;
    private boolean hasWindowID;
    private int windowID_ = 0;
    public boolean hasWindowID() { return hasWindowID; }
    public int getWindowID() { return windowID_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWindowID()) {
        output.writeUInt32(1, getWindowID());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWindowID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getWindowID());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg.getDefaultInstance()) return this;
        if (other.hasWindowID()) {
          setWindowID(other.getWindowID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setWindowID(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 windowID = 1;
      public boolean hasWindowID() {
        return result.hasWindowID();
      }
      public int getWindowID() {
        return result.getWindowID();
      }
      public Builder setWindowID(int value) {
        result.hasWindowID = true;
        result.windowID_ = value;
        return this;
      }
      public Builder clearWindowID() {
        result.hasWindowID = false;
        result.windowID_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.ListDialogsArg)
    }
    
    static {
      defaultInstance = new ListDialogsArg(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.ListDialogsArg)
  }
  
  public static final class Button extends
      com.google.protobuf.GeneratedMessage {
    // Use Button.newBuilder() to construct.
    private Button() {
      initFields();
    }
    private Button(boolean noInit) {}
    
    private static final Button defaultInstance;
    public static Button getDefaultInstance() {
      return defaultInstance;
    }
    
    public Button getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_Button_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_Button_fieldAccessorTable;
    }
    
    public enum ButtonType
        implements com.google.protobuf.ProtocolMessageEnum {
      UNKNOWN(0, 0),
      OK(1, 1),
      CANCEL(2, 2),
      OPEN(3, 3),
      SAVE(4, 4),
      YES(5, 5),
      NO(6, 6),
      INSTALL(7, 7),
      DELETE(8, 8),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static ButtonType valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return OK;
          case 2: return CANCEL;
          case 3: return OPEN;
          case 4: return SAVE;
          case 5: return YES;
          case 6: return NO;
          case 7: return INSTALL;
          case 8: return DELETE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ButtonType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ButtonType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ButtonType>() {
              public ButtonType findValueByNumber(int number) {
                return ButtonType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.Button.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final ButtonType[] VALUES = {
        UNKNOWN, OK, CANCEL, OPEN, SAVE, YES, NO, INSTALL, DELETE, 
      };
      public static ButtonType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private ButtonType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.opera.core.systems.scope.protos.DialogManagerProtos.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:scope.Button.ButtonType)
    }
    
    // required uint32 buttonID = 1;
    public static final int BUTTONID_FIELD_NUMBER = 1;
    private boolean hasButtonID;
    private int buttonID_ = 0;
    public boolean hasButtonID() { return hasButtonID; }
    public int getButtonID() { return buttonID_; }
    
    // required .scope.Button.ButtonType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.opera.core.systems.scope.protos.DialogManagerProtos.Button.ButtonType type_;
    public boolean hasType() { return hasType; }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.Button.ButtonType getType() { return type_; }
    
    private void initFields() {
      type_ = com.opera.core.systems.scope.protos.DialogManagerProtos.Button.ButtonType.UNKNOWN;
    }
    public final boolean isInitialized() {
      if (!hasButtonID) return false;
      if (!hasType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasButtonID()) {
        output.writeUInt32(1, getButtonID());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasButtonID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getButtonID());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Button parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.Button prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.Button result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.Button.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.Button();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.Button internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.Button();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.Button.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Button getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.Button.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Button build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.Button buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Button buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.Button returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.Button) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.Button)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.Button other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.Button.getDefaultInstance()) return this;
        if (other.hasButtonID()) {
          setButtonID(other.getButtonID());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setButtonID(input.readUInt32());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.opera.core.systems.scope.protos.DialogManagerProtos.Button.ButtonType value = com.opera.core.systems.scope.protos.DialogManagerProtos.Button.ButtonType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setType(value);
              }
              break;
            }
          }
        }
      }
      
      
      // required uint32 buttonID = 1;
      public boolean hasButtonID() {
        return result.hasButtonID();
      }
      public int getButtonID() {
        return result.getButtonID();
      }
      public Builder setButtonID(int value) {
        result.hasButtonID = true;
        result.buttonID_ = value;
        return this;
      }
      public Builder clearButtonID() {
        result.hasButtonID = false;
        result.buttonID_ = 0;
        return this;
      }
      
      // required .scope.Button.ButtonType type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Button.ButtonType getType() {
        return result.getType();
      }
      public Builder setType(com.opera.core.systems.scope.protos.DialogManagerProtos.Button.ButtonType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.opera.core.systems.scope.protos.DialogManagerProtos.Button.ButtonType.UNKNOWN;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.Button)
    }
    
    static {
      defaultInstance = new Button(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.Button)
  }
  
  public static final class TextField extends
      com.google.protobuf.GeneratedMessage {
    // Use TextField.newBuilder() to construct.
    private TextField() {
      initFields();
    }
    private TextField(boolean noInit) {}
    
    private static final TextField defaultInstance;
    public static TextField getDefaultInstance() {
      return defaultInstance;
    }
    
    public TextField getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_TextField_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_TextField_fieldAccessorTable;
    }
    
    public enum TextFieldType
        implements com.google.protobuf.ProtocolMessageEnum {
      UNKNOWN(0, 0),
      PROMPT(1, 1),
      MESSAGE(2, 2),
      USERNAME(3, 3),
      PASSWORD(4, 4),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static TextFieldType valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return PROMPT;
          case 2: return MESSAGE;
          case 3: return USERNAME;
          case 4: return PASSWORD;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<TextFieldType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TextFieldType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TextFieldType>() {
              public TextFieldType findValueByNumber(int number) {
                return TextFieldType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final TextFieldType[] VALUES = {
        UNKNOWN, PROMPT, MESSAGE, USERNAME, PASSWORD, 
      };
      public static TextFieldType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private TextFieldType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.opera.core.systems.scope.protos.DialogManagerProtos.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:scope.TextField.TextFieldType)
    }
    
    // required uint32 textFieldID = 1;
    public static final int TEXTFIELDID_FIELD_NUMBER = 1;
    private boolean hasTextFieldID;
    private int textFieldID_ = 0;
    public boolean hasTextFieldID() { return hasTextFieldID; }
    public int getTextFieldID() { return textFieldID_; }
    
    // required .scope.TextField.TextFieldType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.TextFieldType type_;
    public boolean hasType() { return hasType; }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.TextFieldType getType() { return type_; }
    
    // required bool editable = 3;
    public static final int EDITABLE_FIELD_NUMBER = 3;
    private boolean hasEditable;
    private boolean editable_ = false;
    public boolean hasEditable() { return hasEditable; }
    public boolean getEditable() { return editable_; }
    
    // optional string text = 4;
    public static final int TEXT_FIELD_NUMBER = 4;
    private boolean hasText;
    private java.lang.String text_ = "";
    public boolean hasText() { return hasText; }
    public java.lang.String getText() { return text_; }
    
    private void initFields() {
      type_ = com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.TextFieldType.UNKNOWN;
    }
    public final boolean isInitialized() {
      if (!hasTextFieldID) return false;
      if (!hasType) return false;
      if (!hasEditable) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTextFieldID()) {
        output.writeUInt32(1, getTextFieldID());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      if (hasEditable()) {
        output.writeBool(3, getEditable());
      }
      if (hasText()) {
        output.writeString(4, getText());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTextFieldID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getTextFieldID());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      if (hasEditable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getEditable());
      }
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getText());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TextField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.TextField prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.TextField result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.TextField();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.TextField internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.TextField();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.TextField getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.TextField build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.TextField buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.TextField buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.TextField returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.TextField) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.TextField)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.TextField other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.getDefaultInstance()) return this;
        if (other.hasTextFieldID()) {
          setTextFieldID(other.getTextFieldID());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasEditable()) {
          setEditable(other.getEditable());
        }
        if (other.hasText()) {
          setText(other.getText());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTextFieldID(input.readUInt32());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.TextFieldType value = com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.TextFieldType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 24: {
              setEditable(input.readBool());
              break;
            }
            case 34: {
              setText(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required uint32 textFieldID = 1;
      public boolean hasTextFieldID() {
        return result.hasTextFieldID();
      }
      public int getTextFieldID() {
        return result.getTextFieldID();
      }
      public Builder setTextFieldID(int value) {
        result.hasTextFieldID = true;
        result.textFieldID_ = value;
        return this;
      }
      public Builder clearTextFieldID() {
        result.hasTextFieldID = false;
        result.textFieldID_ = 0;
        return this;
      }
      
      // required .scope.TextField.TextFieldType type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.TextFieldType getType() {
        return result.getType();
      }
      public Builder setType(com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.TextFieldType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.TextFieldType.UNKNOWN;
        return this;
      }
      
      // required bool editable = 3;
      public boolean hasEditable() {
        return result.hasEditable();
      }
      public boolean getEditable() {
        return result.getEditable();
      }
      public Builder setEditable(boolean value) {
        result.hasEditable = true;
        result.editable_ = value;
        return this;
      }
      public Builder clearEditable() {
        result.hasEditable = false;
        result.editable_ = false;
        return this;
      }
      
      // optional string text = 4;
      public boolean hasText() {
        return result.hasText();
      }
      public java.lang.String getText() {
        return result.getText();
      }
      public Builder setText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = getDefaultInstance().getText();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.TextField)
    }
    
    static {
      defaultInstance = new TextField(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.TextField)
  }
  
  public static final class Selection extends
      com.google.protobuf.GeneratedMessage {
    // Use Selection.newBuilder() to construct.
    private Selection() {
      initFields();
    }
    private Selection(boolean noInit) {}
    
    private static final Selection defaultInstance;
    public static Selection getDefaultInstance() {
      return defaultInstance;
    }
    
    public Selection getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_Selection_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_Selection_fieldAccessorTable;
    }
    
    public enum SelectionType
        implements com.google.protobuf.ProtocolMessageEnum {
      UNKNOWN(0, 0),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static SelectionType valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<SelectionType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<SelectionType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SelectionType>() {
              public SelectionType findValueByNumber(int number) {
                return SelectionType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final SelectionType[] VALUES = {
        UNKNOWN, 
      };
      public static SelectionType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private SelectionType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.opera.core.systems.scope.protos.DialogManagerProtos.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:scope.Selection.SelectionType)
    }
    
    // required uint32 selectionID = 1;
    public static final int SELECTIONID_FIELD_NUMBER = 1;
    private boolean hasSelectionID;
    private int selectionID_ = 0;
    public boolean hasSelectionID() { return hasSelectionID; }
    public int getSelectionID() { return selectionID_; }
    
    // required .scope.Selection.SelectionType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.SelectionType type_;
    public boolean hasType() { return hasType; }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.SelectionType getType() { return type_; }
    
    // required bool editable = 3;
    public static final int EDITABLE_FIELD_NUMBER = 3;
    private boolean hasEditable;
    private boolean editable_ = false;
    public boolean hasEditable() { return hasEditable; }
    public boolean getEditable() { return editable_; }
    
    // repeated string optionList = 4;
    public static final int OPTIONLIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.String> optionList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getOptionListList() {
      return optionList_;
    }
    public int getOptionListCount() { return optionList_.size(); }
    public java.lang.String getOptionList(int index) {
      return optionList_.get(index);
    }
    
    // repeated uint32 selectedList = 5;
    public static final int SELECTEDLIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> selectedList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getSelectedListList() {
      return selectedList_;
    }
    public int getSelectedListCount() { return selectedList_.size(); }
    public int getSelectedList(int index) {
      return selectedList_.get(index);
    }
    
    // repeated uint32 defaultSelectedList = 6;
    public static final int DEFAULTSELECTEDLIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> defaultSelectedList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getDefaultSelectedListList() {
      return defaultSelectedList_;
    }
    public int getDefaultSelectedListCount() { return defaultSelectedList_.size(); }
    public int getDefaultSelectedList(int index) {
      return defaultSelectedList_.get(index);
    }
    
    private void initFields() {
      type_ = com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.SelectionType.UNKNOWN;
    }
    public final boolean isInitialized() {
      if (!hasSelectionID) return false;
      if (!hasType) return false;
      if (!hasEditable) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSelectionID()) {
        output.writeUInt32(1, getSelectionID());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      if (hasEditable()) {
        output.writeBool(3, getEditable());
      }
      for (java.lang.String element : getOptionListList()) {
        output.writeString(4, element);
      }
      for (int element : getSelectedListList()) {
        output.writeUInt32(5, element);
      }
      for (int element : getDefaultSelectedListList()) {
        output.writeUInt32(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSelectionID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getSelectionID());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      if (hasEditable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getEditable());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getOptionListList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getOptionListList().size();
      }
      {
        int dataSize = 0;
        for (int element : getSelectedListList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSelectedListList().size();
      }
      {
        int dataSize = 0;
        for (int element : getDefaultSelectedListList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getDefaultSelectedListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Selection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.Selection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.Selection result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.Selection();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.Selection internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.Selection();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Selection getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Selection build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.Selection buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Selection buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.optionList_ != java.util.Collections.EMPTY_LIST) {
          result.optionList_ =
            java.util.Collections.unmodifiableList(result.optionList_);
        }
        if (result.selectedList_ != java.util.Collections.EMPTY_LIST) {
          result.selectedList_ =
            java.util.Collections.unmodifiableList(result.selectedList_);
        }
        if (result.defaultSelectedList_ != java.util.Collections.EMPTY_LIST) {
          result.defaultSelectedList_ =
            java.util.Collections.unmodifiableList(result.defaultSelectedList_);
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.Selection returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.Selection) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.Selection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.Selection other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.getDefaultInstance()) return this;
        if (other.hasSelectionID()) {
          setSelectionID(other.getSelectionID());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasEditable()) {
          setEditable(other.getEditable());
        }
        if (!other.optionList_.isEmpty()) {
          if (result.optionList_.isEmpty()) {
            result.optionList_ = new java.util.ArrayList<java.lang.String>();
          }
          result.optionList_.addAll(other.optionList_);
        }
        if (!other.selectedList_.isEmpty()) {
          if (result.selectedList_.isEmpty()) {
            result.selectedList_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.selectedList_.addAll(other.selectedList_);
        }
        if (!other.defaultSelectedList_.isEmpty()) {
          if (result.defaultSelectedList_.isEmpty()) {
            result.defaultSelectedList_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.defaultSelectedList_.addAll(other.defaultSelectedList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSelectionID(input.readUInt32());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.SelectionType value = com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.SelectionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 24: {
              setEditable(input.readBool());
              break;
            }
            case 34: {
              addOptionList(input.readString());
              break;
            }
            case 40: {
              addSelectedList(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSelectedList(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              addDefaultSelectedList(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDefaultSelectedList(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required uint32 selectionID = 1;
      public boolean hasSelectionID() {
        return result.hasSelectionID();
      }
      public int getSelectionID() {
        return result.getSelectionID();
      }
      public Builder setSelectionID(int value) {
        result.hasSelectionID = true;
        result.selectionID_ = value;
        return this;
      }
      public Builder clearSelectionID() {
        result.hasSelectionID = false;
        result.selectionID_ = 0;
        return this;
      }
      
      // required .scope.Selection.SelectionType type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.SelectionType getType() {
        return result.getType();
      }
      public Builder setType(com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.SelectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.SelectionType.UNKNOWN;
        return this;
      }
      
      // required bool editable = 3;
      public boolean hasEditable() {
        return result.hasEditable();
      }
      public boolean getEditable() {
        return result.getEditable();
      }
      public Builder setEditable(boolean value) {
        result.hasEditable = true;
        result.editable_ = value;
        return this;
      }
      public Builder clearEditable() {
        result.hasEditable = false;
        result.editable_ = false;
        return this;
      }
      
      // repeated string optionList = 4;
      public java.util.List<java.lang.String> getOptionListList() {
        return java.util.Collections.unmodifiableList(result.optionList_);
      }
      public int getOptionListCount() {
        return result.getOptionListCount();
      }
      public java.lang.String getOptionList(int index) {
        return result.getOptionList(index);
      }
      public Builder setOptionList(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.optionList_.set(index, value);
        return this;
      }
      public Builder addOptionList(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.optionList_.isEmpty()) {
          result.optionList_ = new java.util.ArrayList<java.lang.String>();
        }
        result.optionList_.add(value);
        return this;
      }
      public Builder addAllOptionList(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.optionList_.isEmpty()) {
          result.optionList_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.optionList_);
        return this;
      }
      public Builder clearOptionList() {
        result.optionList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint32 selectedList = 5;
      public java.util.List<java.lang.Integer> getSelectedListList() {
        return java.util.Collections.unmodifiableList(result.selectedList_);
      }
      public int getSelectedListCount() {
        return result.getSelectedListCount();
      }
      public int getSelectedList(int index) {
        return result.getSelectedList(index);
      }
      public Builder setSelectedList(int index, int value) {
        result.selectedList_.set(index, value);
        return this;
      }
      public Builder addSelectedList(int value) {
        if (result.selectedList_.isEmpty()) {
          result.selectedList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.selectedList_.add(value);
        return this;
      }
      public Builder addAllSelectedList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.selectedList_.isEmpty()) {
          result.selectedList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.selectedList_);
        return this;
      }
      public Builder clearSelectedList() {
        result.selectedList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint32 defaultSelectedList = 6;
      public java.util.List<java.lang.Integer> getDefaultSelectedListList() {
        return java.util.Collections.unmodifiableList(result.defaultSelectedList_);
      }
      public int getDefaultSelectedListCount() {
        return result.getDefaultSelectedListCount();
      }
      public int getDefaultSelectedList(int index) {
        return result.getDefaultSelectedList(index);
      }
      public Builder setDefaultSelectedList(int index, int value) {
        result.defaultSelectedList_.set(index, value);
        return this;
      }
      public Builder addDefaultSelectedList(int value) {
        if (result.defaultSelectedList_.isEmpty()) {
          result.defaultSelectedList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.defaultSelectedList_.add(value);
        return this;
      }
      public Builder addAllDefaultSelectedList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.defaultSelectedList_.isEmpty()) {
          result.defaultSelectedList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.defaultSelectedList_);
        return this;
      }
      public Builder clearDefaultSelectedList() {
        result.defaultSelectedList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.Selection)
    }
    
    static {
      defaultInstance = new Selection(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.Selection)
  }
  
  public static final class TypeArg extends
      com.google.protobuf.GeneratedMessage {
    // Use TypeArg.newBuilder() to construct.
    private TypeArg() {
      initFields();
    }
    private TypeArg(boolean noInit) {}
    
    private static final TypeArg defaultInstance;
    public static TypeArg getDefaultInstance() {
      return defaultInstance;
    }
    
    public TypeArg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_TypeArg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_TypeArg_fieldAccessorTable;
    }
    
    // required .scope.DialogID dialogID = 1;
    public static final int DIALOGID_FIELD_NUMBER = 1;
    private boolean hasDialogID;
    private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID dialogID_;
    public boolean hasDialogID() { return hasDialogID; }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDialogID() { return dialogID_; }
    
    // required uint32 textFieldID = 2;
    public static final int TEXTFIELDID_FIELD_NUMBER = 2;
    private boolean hasTextFieldID;
    private int textFieldID_ = 0;
    public boolean hasTextFieldID() { return hasTextFieldID; }
    public int getTextFieldID() { return textFieldID_; }
    
    // required string text = 3;
    public static final int TEXT_FIELD_NUMBER = 3;
    private boolean hasText;
    private java.lang.String text_ = "";
    public boolean hasText() { return hasText; }
    public java.lang.String getText() { return text_; }
    
    private void initFields() {
      dialogID_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDialogID) return false;
      if (!hasTextFieldID) return false;
      if (!hasText) return false;
      if (!getDialogID().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDialogID()) {
        output.writeMessage(1, getDialogID());
      }
      if (hasTextFieldID()) {
        output.writeUInt32(2, getTextFieldID());
      }
      if (hasText()) {
        output.writeString(3, getText());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDialogID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDialogID());
      }
      if (hasTextFieldID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getTextFieldID());
      }
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getText());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg.getDefaultInstance()) return this;
        if (other.hasDialogID()) {
          mergeDialogID(other.getDialogID());
        }
        if (other.hasTextFieldID()) {
          setTextFieldID(other.getTextFieldID());
        }
        if (other.hasText()) {
          setText(other.getText());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder subBuilder = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder();
              if (hasDialogID()) {
                subBuilder.mergeFrom(getDialogID());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDialogID(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setTextFieldID(input.readUInt32());
              break;
            }
            case 26: {
              setText(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .scope.DialogID dialogID = 1;
      public boolean hasDialogID() {
        return result.hasDialogID();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDialogID() {
        return result.getDialogID();
      }
      public Builder setDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDialogID = true;
        result.dialogID_ = value;
        return this;
      }
      public Builder setDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder builderForValue) {
        result.hasDialogID = true;
        result.dialogID_ = builderForValue.build();
        return this;
      }
      public Builder mergeDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID value) {
        if (result.hasDialogID() &&
            result.dialogID_ != com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance()) {
          result.dialogID_ =
            com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder(result.dialogID_).mergeFrom(value).buildPartial();
        } else {
          result.dialogID_ = value;
        }
        result.hasDialogID = true;
        return this;
      }
      public Builder clearDialogID() {
        result.hasDialogID = false;
        result.dialogID_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
        return this;
      }
      
      // required uint32 textFieldID = 2;
      public boolean hasTextFieldID() {
        return result.hasTextFieldID();
      }
      public int getTextFieldID() {
        return result.getTextFieldID();
      }
      public Builder setTextFieldID(int value) {
        result.hasTextFieldID = true;
        result.textFieldID_ = value;
        return this;
      }
      public Builder clearTextFieldID() {
        result.hasTextFieldID = false;
        result.textFieldID_ = 0;
        return this;
      }
      
      // required string text = 3;
      public boolean hasText() {
        return result.hasText();
      }
      public java.lang.String getText() {
        return result.getText();
      }
      public Builder setText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = getDefaultInstance().getText();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.TypeArg)
    }
    
    static {
      defaultInstance = new TypeArg(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.TypeArg)
  }
  
  public static final class ClickArg extends
      com.google.protobuf.GeneratedMessage {
    // Use ClickArg.newBuilder() to construct.
    private ClickArg() {
      initFields();
    }
    private ClickArg(boolean noInit) {}
    
    private static final ClickArg defaultInstance;
    public static ClickArg getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClickArg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_ClickArg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_ClickArg_fieldAccessorTable;
    }
    
    // required .scope.DialogID dialogID = 1;
    public static final int DIALOGID_FIELD_NUMBER = 1;
    private boolean hasDialogID;
    private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID dialogID_;
    public boolean hasDialogID() { return hasDialogID; }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDialogID() { return dialogID_; }
    
    // required uint32 buttonID = 2;
    public static final int BUTTONID_FIELD_NUMBER = 2;
    private boolean hasButtonID;
    private int buttonID_ = 0;
    public boolean hasButtonID() { return hasButtonID; }
    public int getButtonID() { return buttonID_; }
    
    private void initFields() {
      dialogID_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDialogID) return false;
      if (!hasButtonID) return false;
      if (!getDialogID().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDialogID()) {
        output.writeMessage(1, getDialogID());
      }
      if (hasButtonID()) {
        output.writeUInt32(2, getButtonID());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDialogID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDialogID());
      }
      if (hasButtonID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getButtonID());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg.getDefaultInstance()) return this;
        if (other.hasDialogID()) {
          mergeDialogID(other.getDialogID());
        }
        if (other.hasButtonID()) {
          setButtonID(other.getButtonID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder subBuilder = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder();
              if (hasDialogID()) {
                subBuilder.mergeFrom(getDialogID());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDialogID(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setButtonID(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required .scope.DialogID dialogID = 1;
      public boolean hasDialogID() {
        return result.hasDialogID();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDialogID() {
        return result.getDialogID();
      }
      public Builder setDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDialogID = true;
        result.dialogID_ = value;
        return this;
      }
      public Builder setDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder builderForValue) {
        result.hasDialogID = true;
        result.dialogID_ = builderForValue.build();
        return this;
      }
      public Builder mergeDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID value) {
        if (result.hasDialogID() &&
            result.dialogID_ != com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance()) {
          result.dialogID_ =
            com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder(result.dialogID_).mergeFrom(value).buildPartial();
        } else {
          result.dialogID_ = value;
        }
        result.hasDialogID = true;
        return this;
      }
      public Builder clearDialogID() {
        result.hasDialogID = false;
        result.dialogID_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
        return this;
      }
      
      // required uint32 buttonID = 2;
      public boolean hasButtonID() {
        return result.hasButtonID();
      }
      public int getButtonID() {
        return result.getButtonID();
      }
      public Builder setButtonID(int value) {
        result.hasButtonID = true;
        result.buttonID_ = value;
        return this;
      }
      public Builder clearButtonID() {
        result.hasButtonID = false;
        result.buttonID_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.ClickArg)
    }
    
    static {
      defaultInstance = new ClickArg(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.ClickArg)
  }
  
  public static final class SelectArg extends
      com.google.protobuf.GeneratedMessage {
    // Use SelectArg.newBuilder() to construct.
    private SelectArg() {
      initFields();
    }
    private SelectArg(boolean noInit) {}
    
    private static final SelectArg defaultInstance;
    public static SelectArg getDefaultInstance() {
      return defaultInstance;
    }
    
    public SelectArg getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_SelectArg_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_SelectArg_fieldAccessorTable;
    }
    
    // required .scope.DialogID dialogID = 1;
    public static final int DIALOGID_FIELD_NUMBER = 1;
    private boolean hasDialogID;
    private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID dialogID_;
    public boolean hasDialogID() { return hasDialogID; }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDialogID() { return dialogID_; }
    
    // required uint32 selectionID = 2;
    public static final int SELECTIONID_FIELD_NUMBER = 2;
    private boolean hasSelectionID;
    private int selectionID_ = 0;
    public boolean hasSelectionID() { return hasSelectionID; }
    public int getSelectionID() { return selectionID_; }
    
    // repeated uint32 indexList = 3;
    public static final int INDEXLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> indexList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getIndexListList() {
      return indexList_;
    }
    public int getIndexListCount() { return indexList_.size(); }
    public int getIndexList(int index) {
      return indexList_.get(index);
    }
    
    private void initFields() {
      dialogID_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDialogID) return false;
      if (!hasSelectionID) return false;
      if (!getDialogID().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDialogID()) {
        output.writeMessage(1, getDialogID());
      }
      if (hasSelectionID()) {
        output.writeUInt32(2, getSelectionID());
      }
      for (int element : getIndexListList()) {
        output.writeUInt32(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDialogID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDialogID());
      }
      if (hasSelectionID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getSelectionID());
      }
      {
        int dataSize = 0;
        for (int element : getIndexListList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getIndexListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.indexList_ != java.util.Collections.EMPTY_LIST) {
          result.indexList_ =
            java.util.Collections.unmodifiableList(result.indexList_);
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg.getDefaultInstance()) return this;
        if (other.hasDialogID()) {
          mergeDialogID(other.getDialogID());
        }
        if (other.hasSelectionID()) {
          setSelectionID(other.getSelectionID());
        }
        if (!other.indexList_.isEmpty()) {
          if (result.indexList_.isEmpty()) {
            result.indexList_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.indexList_.addAll(other.indexList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder subBuilder = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder();
              if (hasDialogID()) {
                subBuilder.mergeFrom(getDialogID());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDialogID(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setSelectionID(input.readUInt32());
              break;
            }
            case 24: {
              addIndexList(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addIndexList(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required .scope.DialogID dialogID = 1;
      public boolean hasDialogID() {
        return result.hasDialogID();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDialogID() {
        return result.getDialogID();
      }
      public Builder setDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDialogID = true;
        result.dialogID_ = value;
        return this;
      }
      public Builder setDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder builderForValue) {
        result.hasDialogID = true;
        result.dialogID_ = builderForValue.build();
        return this;
      }
      public Builder mergeDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID value) {
        if (result.hasDialogID() &&
            result.dialogID_ != com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance()) {
          result.dialogID_ =
            com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder(result.dialogID_).mergeFrom(value).buildPartial();
        } else {
          result.dialogID_ = value;
        }
        result.hasDialogID = true;
        return this;
      }
      public Builder clearDialogID() {
        result.hasDialogID = false;
        result.dialogID_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
        return this;
      }
      
      // required uint32 selectionID = 2;
      public boolean hasSelectionID() {
        return result.hasSelectionID();
      }
      public int getSelectionID() {
        return result.getSelectionID();
      }
      public Builder setSelectionID(int value) {
        result.hasSelectionID = true;
        result.selectionID_ = value;
        return this;
      }
      public Builder clearSelectionID() {
        result.hasSelectionID = false;
        result.selectionID_ = 0;
        return this;
      }
      
      // repeated uint32 indexList = 3;
      public java.util.List<java.lang.Integer> getIndexListList() {
        return java.util.Collections.unmodifiableList(result.indexList_);
      }
      public int getIndexListCount() {
        return result.getIndexListCount();
      }
      public int getIndexList(int index) {
        return result.getIndexList(index);
      }
      public Builder setIndexList(int index, int value) {
        result.indexList_.set(index, value);
        return this;
      }
      public Builder addIndexList(int value) {
        if (result.indexList_.isEmpty()) {
          result.indexList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.indexList_.add(value);
        return this;
      }
      public Builder addAllIndexList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.indexList_.isEmpty()) {
          result.indexList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.indexList_);
        return this;
      }
      public Builder clearIndexList() {
        result.indexList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.SelectArg)
    }
    
    static {
      defaultInstance = new SelectArg(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.SelectArg)
  }
  
  public static final class DialogID extends
      com.google.protobuf.GeneratedMessage {
    // Use DialogID.newBuilder() to construct.
    private DialogID() {
      initFields();
    }
    private DialogID(boolean noInit) {}
    
    private static final DialogID defaultInstance;
    public static DialogID getDefaultInstance() {
      return defaultInstance;
    }
    
    public DialogID getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_DialogID_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_DialogID_fieldAccessorTable;
    }
    
    public enum DialogType
        implements com.google.protobuf.ProtocolMessageEnum {
      UNKNOWN(0, 0),
      JS_ALERT(1, 1),
      JS_PROMPT(2, 2),
      JS_CONFIRM(3, 3),
      SYNC_ERROR(4, 4),
      MESSAGE(5, 5),
      WARN_COOKIE(6, 6),
      ASK_COOKIE(7, 7),
      CERT_BROWSE(8, 8),
      CERT_PASSWD(9, 9),
      FILE_CHOOSER(10, 10),
      URL_WITH_USERNAME(11, 11),
      FORM_REDIRECT(12, 12),
      ASK_CONFIRMATION(13, 13),
      FOLDER_CHOOSER(14, 14),
      SYNC_LOGIN(15, 15),
      INSECURE_FORM_SUBMIT(16, 16),
      PLUGIN_POST(17, 17),
      USERJS_ON_HTTPS(18, 18),
      CLIENT_CERT_SELECT(19, 19),
      DB_QUOTA_EXCEEDED(20, 20),
      SAVE_IMAGE(21, 21),
      ASK_CONFIRMATION_GOING_ONLINE(22, 22),
      AUTHENTICATION(23, 23),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static DialogType valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return JS_ALERT;
          case 2: return JS_PROMPT;
          case 3: return JS_CONFIRM;
          case 4: return SYNC_ERROR;
          case 5: return MESSAGE;
          case 6: return WARN_COOKIE;
          case 7: return ASK_COOKIE;
          case 8: return CERT_BROWSE;
          case 9: return CERT_PASSWD;
          case 10: return FILE_CHOOSER;
          case 11: return URL_WITH_USERNAME;
          case 12: return FORM_REDIRECT;
          case 13: return ASK_CONFIRMATION;
          case 14: return FOLDER_CHOOSER;
          case 15: return SYNC_LOGIN;
          case 16: return INSECURE_FORM_SUBMIT;
          case 17: return PLUGIN_POST;
          case 18: return USERJS_ON_HTTPS;
          case 19: return CLIENT_CERT_SELECT;
          case 20: return DB_QUOTA_EXCEEDED;
          case 21: return SAVE_IMAGE;
          case 22: return ASK_CONFIRMATION_GOING_ONLINE;
          case 23: return AUTHENTICATION;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<DialogType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DialogType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DialogType>() {
              public DialogType findValueByNumber(int number) {
                return DialogType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final DialogType[] VALUES = {
        UNKNOWN, JS_ALERT, JS_PROMPT, JS_CONFIRM, SYNC_ERROR, MESSAGE, WARN_COOKIE, ASK_COOKIE, CERT_BROWSE, CERT_PASSWD, FILE_CHOOSER, URL_WITH_USERNAME, FORM_REDIRECT, ASK_CONFIRMATION, FOLDER_CHOOSER, SYNC_LOGIN, INSECURE_FORM_SUBMIT, PLUGIN_POST, USERJS_ON_HTTPS, CLIENT_CERT_SELECT, DB_QUOTA_EXCEEDED, SAVE_IMAGE, ASK_CONFIRMATION_GOING_ONLINE, AUTHENTICATION, 
      };
      public static DialogType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private DialogType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.opera.core.systems.scope.protos.DialogManagerProtos.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:scope.DialogID.DialogType)
    }
    
    // required uint32 windowID = 1;
    public static final int WINDOWID_FIELD_NUMBER = 1;
    private boolean hasWindowID;
    private int windowID_ = 0;
    public boolean hasWindowID() { return hasWindowID; }
    public int getWindowID() { return windowID_; }
    
    // required .scope.DialogID.DialogType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.DialogType type_;
    public boolean hasType() { return hasType; }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.DialogType getType() { return type_; }
    
    private void initFields() {
      type_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.DialogType.UNKNOWN;
    }
    public final boolean isInitialized() {
      if (!hasWindowID) return false;
      if (!hasType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWindowID()) {
        output.writeUInt32(1, getWindowID());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWindowID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getWindowID());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance()) return this;
        if (other.hasWindowID()) {
          setWindowID(other.getWindowID());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setWindowID(input.readUInt32());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.DialogType value = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.DialogType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setType(value);
              }
              break;
            }
          }
        }
      }
      
      
      // required uint32 windowID = 1;
      public boolean hasWindowID() {
        return result.hasWindowID();
      }
      public int getWindowID() {
        return result.getWindowID();
      }
      public Builder setWindowID(int value) {
        result.hasWindowID = true;
        result.windowID_ = value;
        return this;
      }
      public Builder clearWindowID() {
        result.hasWindowID = false;
        result.windowID_ = 0;
        return this;
      }
      
      // required .scope.DialogID.DialogType type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.DialogType getType() {
        return result.getType();
      }
      public Builder setType(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.DialogType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.DialogType.UNKNOWN;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.DialogID)
    }
    
    static {
      defaultInstance = new DialogID(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.DialogID)
  }
  
  public static final class Dialog extends
      com.google.protobuf.GeneratedMessage {
    // Use Dialog.newBuilder() to construct.
    private Dialog() {
      initFields();
    }
    private Dialog(boolean noInit) {}
    
    private static final Dialog defaultInstance;
    public static Dialog getDefaultInstance() {
      return defaultInstance;
    }
    
    public Dialog getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_Dialog_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_Dialog_fieldAccessorTable;
    }
    
    // required .scope.DialogID dialogID = 1;
    public static final int DIALOGID_FIELD_NUMBER = 1;
    private boolean hasDialogID;
    private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID dialogID_;
    public boolean hasDialogID() { return hasDialogID; }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDialogID() { return dialogID_; }
    
    // optional string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private boolean hasTitle;
    private java.lang.String title_ = "";
    public boolean hasTitle() { return hasTitle; }
    public java.lang.String getTitle() { return title_; }
    
    // repeated .scope.Button buttonList = 3;
    public static final int BUTTONLIST_FIELD_NUMBER = 3;
    private java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Button> buttonList_ =
      java.util.Collections.emptyList();
    public java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Button> getButtonListList() {
      return buttonList_;
    }
    public int getButtonListCount() { return buttonList_.size(); }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.Button getButtonList(int index) {
      return buttonList_.get(index);
    }
    
    // repeated .scope.TextField textFieldList = 4;
    public static final int TEXTFIELDLIST_FIELD_NUMBER = 4;
    private java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.TextField> textFieldList_ =
      java.util.Collections.emptyList();
    public java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.TextField> getTextFieldListList() {
      return textFieldList_;
    }
    public int getTextFieldListCount() { return textFieldList_.size(); }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.TextField getTextFieldList(int index) {
      return textFieldList_.get(index);
    }
    
    // repeated .scope.Selection selectionList = 5;
    public static final int SELECTIONLIST_FIELD_NUMBER = 5;
    private java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Selection> selectionList_ =
      java.util.Collections.emptyList();
    public java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Selection> getSelectionListList() {
      return selectionList_;
    }
    public int getSelectionListCount() { return selectionList_.size(); }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.Selection getSelectionList(int index) {
      return selectionList_.get(index);
    }
    
    private void initFields() {
      dialogID_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDialogID) return false;
      if (!getDialogID().isInitialized()) return false;
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Button element : getButtonListList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.TextField element : getTextFieldListList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Selection element : getSelectionListList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDialogID()) {
        output.writeMessage(1, getDialogID());
      }
      if (hasTitle()) {
        output.writeString(2, getTitle());
      }
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Button element : getButtonListList()) {
        output.writeMessage(3, element);
      }
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.TextField element : getTextFieldListList()) {
        output.writeMessage(4, element);
      }
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Selection element : getSelectionListList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDialogID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDialogID());
      }
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTitle());
      }
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Button element : getButtonListList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.TextField element : getTextFieldListList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Selection element : getSelectionListList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.buttonList_ != java.util.Collections.EMPTY_LIST) {
          result.buttonList_ =
            java.util.Collections.unmodifiableList(result.buttonList_);
        }
        if (result.textFieldList_ != java.util.Collections.EMPTY_LIST) {
          result.textFieldList_ =
            java.util.Collections.unmodifiableList(result.textFieldList_);
        }
        if (result.selectionList_ != java.util.Collections.EMPTY_LIST) {
          result.selectionList_ =
            java.util.Collections.unmodifiableList(result.selectionList_);
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.getDefaultInstance()) return this;
        if (other.hasDialogID()) {
          mergeDialogID(other.getDialogID());
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (!other.buttonList_.isEmpty()) {
          if (result.buttonList_.isEmpty()) {
            result.buttonList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Button>();
          }
          result.buttonList_.addAll(other.buttonList_);
        }
        if (!other.textFieldList_.isEmpty()) {
          if (result.textFieldList_.isEmpty()) {
            result.textFieldList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.TextField>();
          }
          result.textFieldList_.addAll(other.textFieldList_);
        }
        if (!other.selectionList_.isEmpty()) {
          if (result.selectionList_.isEmpty()) {
            result.selectionList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Selection>();
          }
          result.selectionList_.addAll(other.selectionList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder subBuilder = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder();
              if (hasDialogID()) {
                subBuilder.mergeFrom(getDialogID());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDialogID(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setTitle(input.readString());
              break;
            }
            case 26: {
              com.opera.core.systems.scope.protos.DialogManagerProtos.Button.Builder subBuilder = com.opera.core.systems.scope.protos.DialogManagerProtos.Button.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addButtonList(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.Builder subBuilder = com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTextFieldList(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.Builder subBuilder = com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSelectionList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .scope.DialogID dialogID = 1;
      public boolean hasDialogID() {
        return result.hasDialogID();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID getDialogID() {
        return result.getDialogID();
      }
      public Builder setDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDialogID = true;
        result.dialogID_ = value;
        return this;
      }
      public Builder setDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder builderForValue) {
        result.hasDialogID = true;
        result.dialogID_ = builderForValue.build();
        return this;
      }
      public Builder mergeDialogID(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID value) {
        if (result.hasDialogID() &&
            result.dialogID_ != com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance()) {
          result.dialogID_ =
            com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.newBuilder(result.dialogID_).mergeFrom(value).buildPartial();
        } else {
          result.dialogID_ = value;
        }
        result.hasDialogID = true;
        return this;
      }
      public Builder clearDialogID() {
        result.hasDialogID = false;
        result.dialogID_ = com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.getDefaultInstance();
        return this;
      }
      
      // optional string title = 2;
      public boolean hasTitle() {
        return result.hasTitle();
      }
      public java.lang.String getTitle() {
        return result.getTitle();
      }
      public Builder setTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder clearTitle() {
        result.hasTitle = false;
        result.title_ = getDefaultInstance().getTitle();
        return this;
      }
      
      // repeated .scope.Button buttonList = 3;
      public java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Button> getButtonListList() {
        return java.util.Collections.unmodifiableList(result.buttonList_);
      }
      public int getButtonListCount() {
        return result.getButtonListCount();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Button getButtonList(int index) {
        return result.getButtonList(index);
      }
      public Builder setButtonList(int index, com.opera.core.systems.scope.protos.DialogManagerProtos.Button value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.buttonList_.set(index, value);
        return this;
      }
      public Builder setButtonList(int index, com.opera.core.systems.scope.protos.DialogManagerProtos.Button.Builder builderForValue) {
        result.buttonList_.set(index, builderForValue.build());
        return this;
      }
      public Builder addButtonList(com.opera.core.systems.scope.protos.DialogManagerProtos.Button value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.buttonList_.isEmpty()) {
          result.buttonList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Button>();
        }
        result.buttonList_.add(value);
        return this;
      }
      public Builder addButtonList(com.opera.core.systems.scope.protos.DialogManagerProtos.Button.Builder builderForValue) {
        if (result.buttonList_.isEmpty()) {
          result.buttonList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Button>();
        }
        result.buttonList_.add(builderForValue.build());
        return this;
      }
      public Builder addAllButtonList(
          java.lang.Iterable<? extends com.opera.core.systems.scope.protos.DialogManagerProtos.Button> values) {
        if (result.buttonList_.isEmpty()) {
          result.buttonList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Button>();
        }
        super.addAll(values, result.buttonList_);
        return this;
      }
      public Builder clearButtonList() {
        result.buttonList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .scope.TextField textFieldList = 4;
      public java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.TextField> getTextFieldListList() {
        return java.util.Collections.unmodifiableList(result.textFieldList_);
      }
      public int getTextFieldListCount() {
        return result.getTextFieldListCount();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.TextField getTextFieldList(int index) {
        return result.getTextFieldList(index);
      }
      public Builder setTextFieldList(int index, com.opera.core.systems.scope.protos.DialogManagerProtos.TextField value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.textFieldList_.set(index, value);
        return this;
      }
      public Builder setTextFieldList(int index, com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.Builder builderForValue) {
        result.textFieldList_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTextFieldList(com.opera.core.systems.scope.protos.DialogManagerProtos.TextField value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.textFieldList_.isEmpty()) {
          result.textFieldList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.TextField>();
        }
        result.textFieldList_.add(value);
        return this;
      }
      public Builder addTextFieldList(com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.Builder builderForValue) {
        if (result.textFieldList_.isEmpty()) {
          result.textFieldList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.TextField>();
        }
        result.textFieldList_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTextFieldList(
          java.lang.Iterable<? extends com.opera.core.systems.scope.protos.DialogManagerProtos.TextField> values) {
        if (result.textFieldList_.isEmpty()) {
          result.textFieldList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.TextField>();
        }
        super.addAll(values, result.textFieldList_);
        return this;
      }
      public Builder clearTextFieldList() {
        result.textFieldList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .scope.Selection selectionList = 5;
      public java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Selection> getSelectionListList() {
        return java.util.Collections.unmodifiableList(result.selectionList_);
      }
      public int getSelectionListCount() {
        return result.getSelectionListCount();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Selection getSelectionList(int index) {
        return result.getSelectionList(index);
      }
      public Builder setSelectionList(int index, com.opera.core.systems.scope.protos.DialogManagerProtos.Selection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.selectionList_.set(index, value);
        return this;
      }
      public Builder setSelectionList(int index, com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.Builder builderForValue) {
        result.selectionList_.set(index, builderForValue.build());
        return this;
      }
      public Builder addSelectionList(com.opera.core.systems.scope.protos.DialogManagerProtos.Selection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.selectionList_.isEmpty()) {
          result.selectionList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Selection>();
        }
        result.selectionList_.add(value);
        return this;
      }
      public Builder addSelectionList(com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.Builder builderForValue) {
        if (result.selectionList_.isEmpty()) {
          result.selectionList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Selection>();
        }
        result.selectionList_.add(builderForValue.build());
        return this;
      }
      public Builder addAllSelectionList(
          java.lang.Iterable<? extends com.opera.core.systems.scope.protos.DialogManagerProtos.Selection> values) {
        if (result.selectionList_.isEmpty()) {
          result.selectionList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Selection>();
        }
        super.addAll(values, result.selectionList_);
        return this;
      }
      public Builder clearSelectionList() {
        result.selectionList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.Dialog)
    }
    
    static {
      defaultInstance = new Dialog(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.Dialog)
  }
  
  public static final class DialogList extends
      com.google.protobuf.GeneratedMessage {
    // Use DialogList.newBuilder() to construct.
    private DialogList() {
      initFields();
    }
    private DialogList(boolean noInit) {}
    
    private static final DialogList defaultInstance;
    public static DialogList getDefaultInstance() {
      return defaultInstance;
    }
    
    public DialogList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_DialogList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DialogManagerProtos.internal_static_scope_DialogList_fieldAccessorTable;
    }
    
    // repeated .scope.Dialog dialogList = 1;
    public static final int DIALOGLIST_FIELD_NUMBER = 1;
    private java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog> dialogList_ =
      java.util.Collections.emptyList();
    public java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog> getDialogListList() {
      return dialogList_;
    }
    public int getDialogListCount() { return dialogList_.size(); }
    public com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog getDialogList(int index) {
      return dialogList_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog element : getDialogListList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog element : getDialogListList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog element : getDialogListList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList result;
      
      // Construct using com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.dialogList_ != java.util.Collections.EMPTY_LIST) {
          result.dialogList_ =
            java.util.Collections.unmodifiableList(result.dialogList_);
        }
        com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList) {
          return mergeFrom((com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList other) {
        if (other == com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList.getDefaultInstance()) return this;
        if (!other.dialogList_.isEmpty()) {
          if (result.dialogList_.isEmpty()) {
            result.dialogList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog>();
          }
          result.dialogList_.addAll(other.dialogList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.Builder subBuilder = com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDialogList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .scope.Dialog dialogList = 1;
      public java.util.List<com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog> getDialogListList() {
        return java.util.Collections.unmodifiableList(result.dialogList_);
      }
      public int getDialogListCount() {
        return result.getDialogListCount();
      }
      public com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog getDialogList(int index) {
        return result.getDialogList(index);
      }
      public Builder setDialogList(int index, com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.dialogList_.set(index, value);
        return this;
      }
      public Builder setDialogList(int index, com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.Builder builderForValue) {
        result.dialogList_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDialogList(com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.dialogList_.isEmpty()) {
          result.dialogList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog>();
        }
        result.dialogList_.add(value);
        return this;
      }
      public Builder addDialogList(com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.Builder builderForValue) {
        if (result.dialogList_.isEmpty()) {
          result.dialogList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog>();
        }
        result.dialogList_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDialogList(
          java.lang.Iterable<? extends com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog> values) {
        if (result.dialogList_.isEmpty()) {
          result.dialogList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog>();
        }
        super.addAll(values, result.dialogList_);
        return this;
      }
      public Builder clearDialogList() {
        result.dialogList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.DialogList)
    }
    
    static {
      defaultInstance = new DialogList(true);
      com.opera.core.systems.scope.protos.DialogManagerProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.DialogList)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_ListDialogsArg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_ListDialogsArg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_Button_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_Button_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_TextField_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_TextField_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_Selection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_Selection_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_TypeArg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_TypeArg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_ClickArg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_ClickArg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_SelectArg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_SelectArg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_DialogID_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_DialogID_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_Dialog_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_Dialog_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_DialogList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_DialogList_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024dialog_manager.proto\022\005scope\"\"\n\016ListDia" +
      "logsArg\022\020\n\010windowID\030\001 \001(\r\"\257\001\n\006Button\022\020\n\010" +
      "buttonID\030\001 \002(\r\022&\n\004type\030\002 \002(\0162\030.scope.But" +
      "ton.ButtonType\"k\n\nButtonType\022\013\n\007UNKNOWN\020" +
      "\000\022\006\n\002OK\020\001\022\n\n\006CANCEL\020\002\022\010\n\004OPEN\020\003\022\010\n\004SAVE\020" +
      "\004\022\007\n\003YES\020\005\022\006\n\002NO\020\006\022\013\n\007INSTALL\020\007\022\n\n\006DELET" +
      "E\020\010\"\301\001\n\tTextField\022\023\n\013textFieldID\030\001 \002(\r\022," +
      "\n\004type\030\002 \002(\0162\036.scope.TextField.TextField" +
      "Type\022\020\n\010editable\030\003 \002(\010\022\014\n\004text\030\004 \001(\t\"Q\n\r" +
      "TextFieldType\022\013\n\007UNKNOWN\020\000\022\n\n\006PROMPT\020\001\022\013",
      "\n\007MESSAGE\020\002\022\014\n\010USERNAME\020\003\022\014\n\010PASSWORD\020\004\"" +
      "\305\001\n\tSelection\022\023\n\013selectionID\030\001 \002(\r\022,\n\004ty" +
      "pe\030\002 \002(\0162\036.scope.Selection.SelectionType" +
      "\022\020\n\010editable\030\003 \002(\010\022\022\n\noptionList\030\004 \003(\t\022\024" +
      "\n\014selectedList\030\005 \003(\r\022\033\n\023defaultSelectedL" +
      "ist\030\006 \003(\r\"\034\n\rSelectionType\022\013\n\007UNKNOWN\020\000\"" +
      "O\n\007TypeArg\022!\n\010dialogID\030\001 \002(\0132\017.scope.Dia" +
      "logID\022\023\n\013textFieldID\030\002 \002(\r\022\014\n\004text\030\003 \002(\t" +
      "\"?\n\010ClickArg\022!\n\010dialogID\030\001 \002(\0132\017.scope.D" +
      "ialogID\022\020\n\010buttonID\030\002 \002(\r\"V\n\tSelectArg\022!",
      "\n\010dialogID\030\001 \002(\0132\017.scope.DialogID\022\023\n\013sel" +
      "ectionID\030\002 \002(\r\022\021\n\tindexList\030\003 \003(\r\"\233\004\n\010Di" +
      "alogID\022\020\n\010windowID\030\001 \002(\r\022(\n\004type\030\002 \002(\0162\032" +
      ".scope.DialogID.DialogType\"\322\003\n\nDialogTyp" +
      "e\022\013\n\007UNKNOWN\020\000\022\014\n\010JS_ALERT\020\001\022\r\n\tJS_PROMP" +
      "T\020\002\022\016\n\nJS_CONFIRM\020\003\022\016\n\nSYNC_ERROR\020\004\022\013\n\007M" +
      "ESSAGE\020\005\022\017\n\013WARN_COOKIE\020\006\022\016\n\nASK_COOKIE\020" +
      "\007\022\017\n\013CERT_BROWSE\020\010\022\017\n\013CERT_PASSWD\020\t\022\020\n\014F" +
      "ILE_CHOOSER\020\n\022\025\n\021URL_WITH_USERNAME\020\013\022\021\n\r" +
      "FORM_REDIRECT\020\014\022\024\n\020ASK_CONFIRMATION\020\r\022\022\n",
      "\016FOLDER_CHOOSER\020\016\022\016\n\nSYNC_LOGIN\020\017\022\030\n\024INS" +
      "ECURE_FORM_SUBMIT\020\020\022\017\n\013PLUGIN_POST\020\021\022\023\n\017" +
      "USERJS_ON_HTTPS\020\022\022\026\n\022CLIENT_CERT_SELECT\020" +
      "\023\022\025\n\021DB_QUOTA_EXCEEDED\020\024\022\016\n\nSAVE_IMAGE\020\025" +
      "\022!\n\035ASK_CONFIRMATION_GOING_ONLINE\020\026\022\022\n\016A" +
      "UTHENTICATION\020\027\"\257\001\n\006Dialog\022!\n\010dialogID\030\001" +
      " \002(\0132\017.scope.DialogID\022\r\n\005title\030\002 \001(\t\022!\n\n" +
      "buttonList\030\003 \003(\0132\r.scope.Button\022\'\n\rtextF" +
      "ieldList\030\004 \003(\0132\020.scope.TextField\022\'\n\rsele" +
      "ctionList\030\005 \003(\0132\020.scope.Selection\"/\n\nDia",
      "logList\022!\n\ndialogList\030\001 \003(\0132\r.scope.Dial" +
      "ogB<\n#com.opera.core.systems.scope.proto" +
      "sB\023DialogManagerProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_scope_ListDialogsArg_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_scope_ListDialogsArg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_ListDialogsArg_descriptor,
              new java.lang.String[] { "WindowID", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.ListDialogsArg.Builder.class);
          internal_static_scope_Button_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_scope_Button_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_Button_descriptor,
              new java.lang.String[] { "ButtonID", "Type", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.Button.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.Button.Builder.class);
          internal_static_scope_TextField_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_scope_TextField_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_TextField_descriptor,
              new java.lang.String[] { "TextFieldID", "Type", "Editable", "Text", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.TextField.Builder.class);
          internal_static_scope_Selection_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_scope_Selection_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_Selection_descriptor,
              new java.lang.String[] { "SelectionID", "Type", "Editable", "OptionList", "SelectedList", "DefaultSelectedList", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.Selection.Builder.class);
          internal_static_scope_TypeArg_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_scope_TypeArg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_TypeArg_descriptor,
              new java.lang.String[] { "DialogID", "TextFieldID", "Text", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.TypeArg.Builder.class);
          internal_static_scope_ClickArg_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_scope_ClickArg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_ClickArg_descriptor,
              new java.lang.String[] { "DialogID", "ButtonID", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.ClickArg.Builder.class);
          internal_static_scope_SelectArg_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_scope_SelectArg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_SelectArg_descriptor,
              new java.lang.String[] { "DialogID", "SelectionID", "IndexList", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.SelectArg.Builder.class);
          internal_static_scope_DialogID_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_scope_DialogID_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_DialogID_descriptor,
              new java.lang.String[] { "WindowID", "Type", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogID.Builder.class);
          internal_static_scope_Dialog_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_scope_Dialog_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_Dialog_descriptor,
              new java.lang.String[] { "DialogID", "Title", "ButtonList", "TextFieldList", "SelectionList", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.Dialog.Builder.class);
          internal_static_scope_DialogList_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_scope_DialogList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_DialogList_descriptor,
              new java.lang.String[] { "DialogList", },
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList.class,
              com.opera.core.systems.scope.protos.DialogManagerProtos.DialogList.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
