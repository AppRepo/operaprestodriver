// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: desktop_window_manager.proto

package com.opera.core.systems.scope.protos;

public final class DesktopWmProtos {
  private DesktopWmProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class DesktopWindowInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use DesktopWindowInfo.newBuilder() to construct.
    private DesktopWindowInfo() {
      initFields();
    }
    private DesktopWindowInfo(boolean noInit) {}
    
    private static final DesktopWindowInfo defaultInstance;
    public static DesktopWindowInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public DesktopWindowInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_DesktopWindowInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_DesktopWindowInfo_fieldAccessorTable;
    }
    
    // required uint32 windowID = 1;
    public static final int WINDOWID_FIELD_NUMBER = 1;
    private boolean hasWindowID;
    private int windowID_ = 0;
    public boolean hasWindowID() { return hasWindowID; }
    public int getWindowID() { return windowID_; }
    
    // required string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private boolean hasTitle;
    private java.lang.String title_ = "";
    public boolean hasTitle() { return hasTitle; }
    public java.lang.String getTitle() { return title_; }
    
    // required string titleID = 3;
    public static final int TITLEID_FIELD_NUMBER = 3;
    private boolean hasTitleID;
    private java.lang.String titleID_ = "";
    public boolean hasTitleID() { return hasTitleID; }
    public java.lang.String getTitleID() { return titleID_; }
    
    // required string windowType = 4;
    public static final int WINDOWTYPE_FIELD_NUMBER = 4;
    private boolean hasWindowType;
    private java.lang.String windowType_ = "";
    public boolean hasWindowType() { return hasWindowType; }
    public java.lang.String getWindowType() { return windowType_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasWindowID) return false;
      if (!hasTitle) return false;
      if (!hasTitleID) return false;
      if (!hasWindowType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWindowID()) {
        output.writeUInt32(1, getWindowID());
      }
      if (hasTitle()) {
        output.writeString(2, getTitle());
      }
      if (hasTitleID()) {
        output.writeString(3, getTitleID());
      }
      if (hasWindowType()) {
        output.writeString(4, getWindowType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWindowID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getWindowID());
      }
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTitle());
      }
      if (hasTitleID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getTitleID());
      }
      if (hasWindowType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getWindowType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo result;
      
      // Construct using com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo) {
          return mergeFrom((com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo other) {
        if (other == com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.getDefaultInstance()) return this;
        if (other.hasWindowID()) {
          setWindowID(other.getWindowID());
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasTitleID()) {
          setTitleID(other.getTitleID());
        }
        if (other.hasWindowType()) {
          setWindowType(other.getWindowType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setWindowID(input.readUInt32());
              break;
            }
            case 18: {
              setTitle(input.readString());
              break;
            }
            case 26: {
              setTitleID(input.readString());
              break;
            }
            case 34: {
              setWindowType(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required uint32 windowID = 1;
      public boolean hasWindowID() {
        return result.hasWindowID();
      }
      public int getWindowID() {
        return result.getWindowID();
      }
      public Builder setWindowID(int value) {
        result.hasWindowID = true;
        result.windowID_ = value;
        return this;
      }
      public Builder clearWindowID() {
        result.hasWindowID = false;
        result.windowID_ = 0;
        return this;
      }
      
      // required string title = 2;
      public boolean hasTitle() {
        return result.hasTitle();
      }
      public java.lang.String getTitle() {
        return result.getTitle();
      }
      public Builder setTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder clearTitle() {
        result.hasTitle = false;
        result.title_ = getDefaultInstance().getTitle();
        return this;
      }
      
      // required string titleID = 3;
      public boolean hasTitleID() {
        return result.hasTitleID();
      }
      public java.lang.String getTitleID() {
        return result.getTitleID();
      }
      public Builder setTitleID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitleID = true;
        result.titleID_ = value;
        return this;
      }
      public Builder clearTitleID() {
        result.hasTitleID = false;
        result.titleID_ = getDefaultInstance().getTitleID();
        return this;
      }
      
      // required string windowType = 4;
      public boolean hasWindowType() {
        return result.hasWindowType();
      }
      public java.lang.String getWindowType() {
        return result.getWindowType();
      }
      public Builder setWindowType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWindowType = true;
        result.windowType_ = value;
        return this;
      }
      public Builder clearWindowType() {
        result.hasWindowType = false;
        result.windowType_ = getDefaultInstance().getWindowType();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.DesktopWindowInfo)
    }
    
    static {
      defaultInstance = new DesktopWindowInfo(true);
      com.opera.core.systems.scope.protos.DesktopWmProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.DesktopWindowInfo)
  }
  
  public static final class QuickWidgetInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use QuickWidgetInfo.newBuilder() to construct.
    private QuickWidgetInfo() {
      initFields();
    }
    private QuickWidgetInfo(boolean noInit) {}
    
    private static final QuickWidgetInfo defaultInstance;
    public static QuickWidgetInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public QuickWidgetInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_QuickWidgetInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_QuickWidgetInfo_fieldAccessorTable;
    }
    
    // required uint32 widgetID = 1;
    public static final int WIDGETID_FIELD_NUMBER = 1;
    private boolean hasWidgetID;
    private int widgetID_ = 0;
    public boolean hasWidgetID() { return hasWidgetID; }
    public int getWidgetID() { return widgetID_; }
    
    // required string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private boolean hasTitle;
    private java.lang.String title_ = "";
    public boolean hasTitle() { return hasTitle; }
    public java.lang.String getTitle() { return title_; }
    
    // required string titleID = 3;
    public static final int TITLEID_FIELD_NUMBER = 3;
    private boolean hasTitleID;
    private java.lang.String titleID_ = "";
    public boolean hasTitleID() { return hasTitleID; }
    public java.lang.String getTitleID() { return titleID_; }
    
    // required string type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    // required uint32 visible = 5;
    public static final int VISIBLE_FIELD_NUMBER = 5;
    private boolean hasVisible;
    private int visible_ = 0;
    public boolean hasVisible() { return hasVisible; }
    public int getVisible() { return visible_; }
    
    // required string text = 6;
    public static final int TEXT_FIELD_NUMBER = 6;
    private boolean hasText;
    private java.lang.String text_ = "";
    public boolean hasText() { return hasText; }
    public java.lang.String getText() { return text_; }
    
    // required uint32 state = 7;
    public static final int STATE_FIELD_NUMBER = 7;
    private boolean hasState;
    private int state_ = 0;
    public boolean hasState() { return hasState; }
    public int getState() { return state_; }
    
    // required bool enabled = 8;
    public static final int ENABLED_FIELD_NUMBER = 8;
    private boolean hasEnabled;
    private boolean enabled_ = false;
    public boolean hasEnabled() { return hasEnabled; }
    public boolean getEnabled() { return enabled_; }
    
    // required .scope.QuickWidgetRect rect = 9;
    public static final int RECT_FIELD_NUMBER = 9;
    private boolean hasRect;
    private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect rect_;
    public boolean hasRect() { return hasRect; }
    public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect getRect() { return rect_; }
    
    private void initFields() {
      rect_ = com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasWidgetID) return false;
      if (!hasTitle) return false;
      if (!hasTitleID) return false;
      if (!hasType) return false;
      if (!hasVisible) return false;
      if (!hasText) return false;
      if (!hasState) return false;
      if (!hasEnabled) return false;
      if (!hasRect) return false;
      if (!getRect().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWidgetID()) {
        output.writeUInt32(1, getWidgetID());
      }
      if (hasTitle()) {
        output.writeString(2, getTitle());
      }
      if (hasTitleID()) {
        output.writeString(3, getTitleID());
      }
      if (hasType()) {
        output.writeString(4, getType());
      }
      if (hasVisible()) {
        output.writeUInt32(5, getVisible());
      }
      if (hasText()) {
        output.writeString(6, getText());
      }
      if (hasState()) {
        output.writeUInt32(7, getState());
      }
      if (hasEnabled()) {
        output.writeBool(8, getEnabled());
      }
      if (hasRect()) {
        output.writeMessage(9, getRect());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWidgetID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getWidgetID());
      }
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTitle());
      }
      if (hasTitleID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getTitleID());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getType());
      }
      if (hasVisible()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getVisible());
      }
      if (hasText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getText());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getState());
      }
      if (hasEnabled()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getEnabled());
      }
      if (hasRect()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getRect());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo result;
      
      // Construct using com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo) {
          return mergeFrom((com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo other) {
        if (other == com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.getDefaultInstance()) return this;
        if (other.hasWidgetID()) {
          setWidgetID(other.getWidgetID());
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasTitleID()) {
          setTitleID(other.getTitleID());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasVisible()) {
          setVisible(other.getVisible());
        }
        if (other.hasText()) {
          setText(other.getText());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasRect()) {
          mergeRect(other.getRect());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setWidgetID(input.readUInt32());
              break;
            }
            case 18: {
              setTitle(input.readString());
              break;
            }
            case 26: {
              setTitleID(input.readString());
              break;
            }
            case 34: {
              setType(input.readString());
              break;
            }
            case 40: {
              setVisible(input.readUInt32());
              break;
            }
            case 50: {
              setText(input.readString());
              break;
            }
            case 56: {
              setState(input.readUInt32());
              break;
            }
            case 64: {
              setEnabled(input.readBool());
              break;
            }
            case 74: {
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.Builder subBuilder = com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.newBuilder();
              if (hasRect()) {
                subBuilder.mergeFrom(getRect());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRect(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint32 widgetID = 1;
      public boolean hasWidgetID() {
        return result.hasWidgetID();
      }
      public int getWidgetID() {
        return result.getWidgetID();
      }
      public Builder setWidgetID(int value) {
        result.hasWidgetID = true;
        result.widgetID_ = value;
        return this;
      }
      public Builder clearWidgetID() {
        result.hasWidgetID = false;
        result.widgetID_ = 0;
        return this;
      }
      
      // required string title = 2;
      public boolean hasTitle() {
        return result.hasTitle();
      }
      public java.lang.String getTitle() {
        return result.getTitle();
      }
      public Builder setTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder clearTitle() {
        result.hasTitle = false;
        result.title_ = getDefaultInstance().getTitle();
        return this;
      }
      
      // required string titleID = 3;
      public boolean hasTitleID() {
        return result.hasTitleID();
      }
      public java.lang.String getTitleID() {
        return result.getTitleID();
      }
      public Builder setTitleID(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitleID = true;
        result.titleID_ = value;
        return this;
      }
      public Builder clearTitleID() {
        result.hasTitleID = false;
        result.titleID_ = getDefaultInstance().getTitleID();
        return this;
      }
      
      // required string type = 4;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = getDefaultInstance().getType();
        return this;
      }
      
      // required uint32 visible = 5;
      public boolean hasVisible() {
        return result.hasVisible();
      }
      public int getVisible() {
        return result.getVisible();
      }
      public Builder setVisible(int value) {
        result.hasVisible = true;
        result.visible_ = value;
        return this;
      }
      public Builder clearVisible() {
        result.hasVisible = false;
        result.visible_ = 0;
        return this;
      }
      
      // required string text = 6;
      public boolean hasText() {
        return result.hasText();
      }
      public java.lang.String getText() {
        return result.getText();
      }
      public Builder setText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder clearText() {
        result.hasText = false;
        result.text_ = getDefaultInstance().getText();
        return this;
      }
      
      // required uint32 state = 7;
      public boolean hasState() {
        return result.hasState();
      }
      public int getState() {
        return result.getState();
      }
      public Builder setState(int value) {
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = 0;
        return this;
      }
      
      // required bool enabled = 8;
      public boolean hasEnabled() {
        return result.hasEnabled();
      }
      public boolean getEnabled() {
        return result.getEnabled();
      }
      public Builder setEnabled(boolean value) {
        result.hasEnabled = true;
        result.enabled_ = value;
        return this;
      }
      public Builder clearEnabled() {
        result.hasEnabled = false;
        result.enabled_ = false;
        return this;
      }
      
      // required .scope.QuickWidgetRect rect = 9;
      public boolean hasRect() {
        return result.hasRect();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect getRect() {
        return result.getRect();
      }
      public Builder setRect(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRect = true;
        result.rect_ = value;
        return this;
      }
      public Builder setRect(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.Builder builderForValue) {
        result.hasRect = true;
        result.rect_ = builderForValue.build();
        return this;
      }
      public Builder mergeRect(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect value) {
        if (result.hasRect() &&
            result.rect_ != com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.getDefaultInstance()) {
          result.rect_ =
            com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.newBuilder(result.rect_).mergeFrom(value).buildPartial();
        } else {
          result.rect_ = value;
        }
        result.hasRect = true;
        return this;
      }
      public Builder clearRect() {
        result.hasRect = false;
        result.rect_ = com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.QuickWidgetInfo)
    }
    
    static {
      defaultInstance = new QuickWidgetInfo(true);
      com.opera.core.systems.scope.protos.DesktopWmProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.QuickWidgetInfo)
  }
  
  public static final class QuickWidgetRect extends
      com.google.protobuf.GeneratedMessage {
    // Use QuickWidgetRect.newBuilder() to construct.
    private QuickWidgetRect() {
      initFields();
    }
    private QuickWidgetRect(boolean noInit) {}
    
    private static final QuickWidgetRect defaultInstance;
    public static QuickWidgetRect getDefaultInstance() {
      return defaultInstance;
    }
    
    public QuickWidgetRect getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_QuickWidgetRect_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_QuickWidgetRect_fieldAccessorTable;
    }
    
    // required uint32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private boolean hasX;
    private int x_ = 0;
    public boolean hasX() { return hasX; }
    public int getX() { return x_; }
    
    // required uint32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private boolean hasY;
    private int y_ = 0;
    public boolean hasY() { return hasY; }
    public int getY() { return y_; }
    
    // required uint32 width = 3;
    public static final int WIDTH_FIELD_NUMBER = 3;
    private boolean hasWidth;
    private int width_ = 0;
    public boolean hasWidth() { return hasWidth; }
    public int getWidth() { return width_; }
    
    // required uint32 height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private boolean hasHeight;
    private int height_ = 0;
    public boolean hasHeight() { return hasHeight; }
    public int getHeight() { return height_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasX) return false;
      if (!hasY) return false;
      if (!hasWidth) return false;
      if (!hasHeight) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasX()) {
        output.writeUInt32(1, getX());
      }
      if (hasY()) {
        output.writeUInt32(2, getY());
      }
      if (hasWidth()) {
        output.writeUInt32(3, getWidth());
      }
      if (hasHeight()) {
        output.writeUInt32(4, getHeight());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getY());
      }
      if (hasWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getWidth());
      }
      if (hasHeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getHeight());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect result;
      
      // Construct using com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect) {
          return mergeFrom((com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect other) {
        if (other == com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setX(input.readUInt32());
              break;
            }
            case 16: {
              setY(input.readUInt32());
              break;
            }
            case 24: {
              setWidth(input.readUInt32());
              break;
            }
            case 32: {
              setHeight(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 x = 1;
      public boolean hasX() {
        return result.hasX();
      }
      public int getX() {
        return result.getX();
      }
      public Builder setX(int value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      // required uint32 y = 2;
      public boolean hasY() {
        return result.hasY();
      }
      public int getY() {
        return result.getY();
      }
      public Builder setY(int value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      // required uint32 width = 3;
      public boolean hasWidth() {
        return result.hasWidth();
      }
      public int getWidth() {
        return result.getWidth();
      }
      public Builder setWidth(int value) {
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder clearWidth() {
        result.hasWidth = false;
        result.width_ = 0;
        return this;
      }
      
      // required uint32 height = 4;
      public boolean hasHeight() {
        return result.hasHeight();
      }
      public int getHeight() {
        return result.getHeight();
      }
      public Builder setHeight(int value) {
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder clearHeight() {
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.QuickWidgetRect)
    }
    
    static {
      defaultInstance = new QuickWidgetRect(true);
      com.opera.core.systems.scope.protos.DesktopWmProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.QuickWidgetRect)
  }
  
  public static final class QuickWidgetInfoList extends
      com.google.protobuf.GeneratedMessage {
    // Use QuickWidgetInfoList.newBuilder() to construct.
    private QuickWidgetInfoList() {
      initFields();
    }
    private QuickWidgetInfoList(boolean noInit) {}
    
    private static final QuickWidgetInfoList defaultInstance;
    public static QuickWidgetInfoList getDefaultInstance() {
      return defaultInstance;
    }
    
    public QuickWidgetInfoList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_QuickWidgetInfoList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_QuickWidgetInfoList_fieldAccessorTable;
    }
    
    // repeated .scope.QuickWidgetInfo quickwidgetList = 1;
    public static final int QUICKWIDGETLIST_FIELD_NUMBER = 1;
    private java.util.List<com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo> quickwidgetList_ =
      java.util.Collections.emptyList();
    public java.util.List<com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo> getQuickwidgetListList() {
      return quickwidgetList_;
    }
    public int getQuickwidgetListCount() { return quickwidgetList_.size(); }
    public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo getQuickwidgetList(int index) {
      return quickwidgetList_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo element : getQuickwidgetListList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo element : getQuickwidgetListList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo element : getQuickwidgetListList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList result;
      
      // Construct using com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.quickwidgetList_ != java.util.Collections.EMPTY_LIST) {
          result.quickwidgetList_ =
            java.util.Collections.unmodifiableList(result.quickwidgetList_);
        }
        com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList) {
          return mergeFrom((com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList other) {
        if (other == com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList.getDefaultInstance()) return this;
        if (!other.quickwidgetList_.isEmpty()) {
          if (result.quickwidgetList_.isEmpty()) {
            result.quickwidgetList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo>();
          }
          result.quickwidgetList_.addAll(other.quickwidgetList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.Builder subBuilder = com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addQuickwidgetList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .scope.QuickWidgetInfo quickwidgetList = 1;
      public java.util.List<com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo> getQuickwidgetListList() {
        return java.util.Collections.unmodifiableList(result.quickwidgetList_);
      }
      public int getQuickwidgetListCount() {
        return result.getQuickwidgetListCount();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo getQuickwidgetList(int index) {
        return result.getQuickwidgetList(index);
      }
      public Builder setQuickwidgetList(int index, com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.quickwidgetList_.set(index, value);
        return this;
      }
      public Builder setQuickwidgetList(int index, com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.Builder builderForValue) {
        result.quickwidgetList_.set(index, builderForValue.build());
        return this;
      }
      public Builder addQuickwidgetList(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.quickwidgetList_.isEmpty()) {
          result.quickwidgetList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo>();
        }
        result.quickwidgetList_.add(value);
        return this;
      }
      public Builder addQuickwidgetList(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.Builder builderForValue) {
        if (result.quickwidgetList_.isEmpty()) {
          result.quickwidgetList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo>();
        }
        result.quickwidgetList_.add(builderForValue.build());
        return this;
      }
      public Builder addAllQuickwidgetList(
          java.lang.Iterable<? extends com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo> values) {
        if (result.quickwidgetList_.isEmpty()) {
          result.quickwidgetList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo>();
        }
        super.addAll(values, result.quickwidgetList_);
        return this;
      }
      public Builder clearQuickwidgetList() {
        result.quickwidgetList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.QuickWidgetInfoList)
    }
    
    static {
      defaultInstance = new QuickWidgetInfoList(true);
      com.opera.core.systems.scope.protos.DesktopWmProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.QuickWidgetInfoList)
  }
  
  public static final class QuickWidgetSearch extends
      com.google.protobuf.GeneratedMessage {
    // Use QuickWidgetSearch.newBuilder() to construct.
    private QuickWidgetSearch() {
      initFields();
    }
    private QuickWidgetSearch(boolean noInit) {}
    
    private static final QuickWidgetSearch defaultInstance;
    public static QuickWidgetSearch getDefaultInstance() {
      return defaultInstance;
    }
    
    public QuickWidgetSearch getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_QuickWidgetSearch_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_QuickWidgetSearch_fieldAccessorTable;
    }
    
    // required .scope.DesktopWindowID window_id = 1;
    public static final int WINDOW_ID_FIELD_NUMBER = 1;
    private boolean hasWindowId;
    private com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID windowId_;
    public boolean hasWindowId() { return hasWindowId; }
    public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID getWindowId() { return windowId_; }
    
    // required string search_type = 2;
    public static final int SEARCH_TYPE_FIELD_NUMBER = 2;
    private boolean hasSearchType;
    private java.lang.String searchType_ = "";
    public boolean hasSearchType() { return hasSearchType; }
    public java.lang.String getSearchType() { return searchType_; }
    
    // required string data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private boolean hasData;
    private java.lang.String data_ = "";
    public boolean hasData() { return hasData; }
    public java.lang.String getData() { return data_; }
    
    private void initFields() {
      windowId_ = com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasWindowId) return false;
      if (!hasSearchType) return false;
      if (!hasData) return false;
      if (!getWindowId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWindowId()) {
        output.writeMessage(1, getWindowId());
      }
      if (hasSearchType()) {
        output.writeString(2, getSearchType());
      }
      if (hasData()) {
        output.writeString(3, getData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWindowId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getWindowId());
      }
      if (hasSearchType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSearchType());
      }
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch result;
      
      // Construct using com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch) {
          return mergeFrom((com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch other) {
        if (other == com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch.getDefaultInstance()) return this;
        if (other.hasWindowId()) {
          mergeWindowId(other.getWindowId());
        }
        if (other.hasSearchType()) {
          setSearchType(other.getSearchType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.Builder subBuilder = com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.newBuilder();
              if (hasWindowId()) {
                subBuilder.mergeFrom(getWindowId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWindowId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setSearchType(input.readString());
              break;
            }
            case 26: {
              setData(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .scope.DesktopWindowID window_id = 1;
      public boolean hasWindowId() {
        return result.hasWindowId();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID getWindowId() {
        return result.getWindowId();
      }
      public Builder setWindowId(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasWindowId = true;
        result.windowId_ = value;
        return this;
      }
      public Builder setWindowId(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.Builder builderForValue) {
        result.hasWindowId = true;
        result.windowId_ = builderForValue.build();
        return this;
      }
      public Builder mergeWindowId(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID value) {
        if (result.hasWindowId() &&
            result.windowId_ != com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.getDefaultInstance()) {
          result.windowId_ =
            com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.newBuilder(result.windowId_).mergeFrom(value).buildPartial();
        } else {
          result.windowId_ = value;
        }
        result.hasWindowId = true;
        return this;
      }
      public Builder clearWindowId() {
        result.hasWindowId = false;
        result.windowId_ = com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.getDefaultInstance();
        return this;
      }
      
      // required string search_type = 2;
      public boolean hasSearchType() {
        return result.hasSearchType();
      }
      public java.lang.String getSearchType() {
        return result.getSearchType();
      }
      public Builder setSearchType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSearchType = true;
        result.searchType_ = value;
        return this;
      }
      public Builder clearSearchType() {
        result.hasSearchType = false;
        result.searchType_ = getDefaultInstance().getSearchType();
        return this;
      }
      
      // required string data = 3;
      public boolean hasData() {
        return result.hasData();
      }
      public java.lang.String getData() {
        return result.getData();
      }
      public Builder setData(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.QuickWidgetSearch)
    }
    
    static {
      defaultInstance = new QuickWidgetSearch(true);
      com.opera.core.systems.scope.protos.DesktopWmProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.QuickWidgetSearch)
  }
  
  public static final class DesktopWindowID extends
      com.google.protobuf.GeneratedMessage {
    // Use DesktopWindowID.newBuilder() to construct.
    private DesktopWindowID() {
      initFields();
    }
    private DesktopWindowID(boolean noInit) {}
    
    private static final DesktopWindowID defaultInstance;
    public static DesktopWindowID getDefaultInstance() {
      return defaultInstance;
    }
    
    public DesktopWindowID getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_DesktopWindowID_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_DesktopWindowID_fieldAccessorTable;
    }
    
    // required uint32 windowID = 1;
    public static final int WINDOWID_FIELD_NUMBER = 1;
    private boolean hasWindowID;
    private int windowID_ = 0;
    public boolean hasWindowID() { return hasWindowID; }
    public int getWindowID() { return windowID_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasWindowID) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWindowID()) {
        output.writeUInt32(1, getWindowID());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWindowID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getWindowID());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID result;
      
      // Construct using com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID) {
          return mergeFrom((com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID other) {
        if (other == com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.getDefaultInstance()) return this;
        if (other.hasWindowID()) {
          setWindowID(other.getWindowID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setWindowID(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 windowID = 1;
      public boolean hasWindowID() {
        return result.hasWindowID();
      }
      public int getWindowID() {
        return result.getWindowID();
      }
      public Builder setWindowID(int value) {
        result.hasWindowID = true;
        result.windowID_ = value;
        return this;
      }
      public Builder clearWindowID() {
        result.hasWindowID = false;
        result.windowID_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.DesktopWindowID)
    }
    
    static {
      defaultInstance = new DesktopWindowID(true);
      com.opera.core.systems.scope.protos.DesktopWmProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.DesktopWindowID)
  }
  
  public static final class DesktopWindowList extends
      com.google.protobuf.GeneratedMessage {
    // Use DesktopWindowList.newBuilder() to construct.
    private DesktopWindowList() {
      initFields();
    }
    private DesktopWindowList(boolean noInit) {}
    
    private static final DesktopWindowList defaultInstance;
    public static DesktopWindowList getDefaultInstance() {
      return defaultInstance;
    }
    
    public DesktopWindowList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_DesktopWindowList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.DesktopWmProtos.internal_static_scope_DesktopWindowList_fieldAccessorTable;
    }
    
    // repeated .scope.DesktopWindowInfo windowList = 1;
    public static final int WINDOWLIST_FIELD_NUMBER = 1;
    private java.util.List<com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo> windowList_ =
      java.util.Collections.emptyList();
    public java.util.List<com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo> getWindowListList() {
      return windowList_;
    }
    public int getWindowListCount() { return windowList_.size(); }
    public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo getWindowList(int index) {
      return windowList_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo element : getWindowListList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo element : getWindowListList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo element : getWindowListList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList result;
      
      // Construct using com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList();
        return builder;
      }
      
      protected com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList.getDescriptor();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.windowList_ != java.util.Collections.EMPTY_LIST) {
          result.windowList_ =
            java.util.Collections.unmodifiableList(result.windowList_);
        }
        com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList) {
          return mergeFrom((com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList other) {
        if (other == com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList.getDefaultInstance()) return this;
        if (!other.windowList_.isEmpty()) {
          if (result.windowList_.isEmpty()) {
            result.windowList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo>();
          }
          result.windowList_.addAll(other.windowList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.Builder subBuilder = com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWindowList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .scope.DesktopWindowInfo windowList = 1;
      public java.util.List<com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo> getWindowListList() {
        return java.util.Collections.unmodifiableList(result.windowList_);
      }
      public int getWindowListCount() {
        return result.getWindowListCount();
      }
      public com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo getWindowList(int index) {
        return result.getWindowList(index);
      }
      public Builder setWindowList(int index, com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.windowList_.set(index, value);
        return this;
      }
      public Builder setWindowList(int index, com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.Builder builderForValue) {
        result.windowList_.set(index, builderForValue.build());
        return this;
      }
      public Builder addWindowList(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.windowList_.isEmpty()) {
          result.windowList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo>();
        }
        result.windowList_.add(value);
        return this;
      }
      public Builder addWindowList(com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.Builder builderForValue) {
        if (result.windowList_.isEmpty()) {
          result.windowList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo>();
        }
        result.windowList_.add(builderForValue.build());
        return this;
      }
      public Builder addAllWindowList(
          java.lang.Iterable<? extends com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo> values) {
        if (result.windowList_.isEmpty()) {
          result.windowList_ = new java.util.ArrayList<com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo>();
        }
        super.addAll(values, result.windowList_);
        return this;
      }
      public Builder clearWindowList() {
        result.windowList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:scope.DesktopWindowList)
    }
    
    static {
      defaultInstance = new DesktopWindowList(true);
      com.opera.core.systems.scope.protos.DesktopWmProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:scope.DesktopWindowList)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_DesktopWindowInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_DesktopWindowInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_QuickWidgetInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_QuickWidgetInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_QuickWidgetRect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_QuickWidgetRect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_QuickWidgetInfoList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_QuickWidgetInfoList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_QuickWidgetSearch_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_QuickWidgetSearch_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_DesktopWindowID_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_DesktopWindowID_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_scope_DesktopWindowList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_DesktopWindowList_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034desktop_window_manager.proto\022\005scope\"Y\n" +
      "\021DesktopWindowInfo\022\020\n\010windowID\030\001 \002(\r\022\r\n\005" +
      "title\030\002 \002(\t\022\017\n\007titleID\030\003 \002(\t\022\022\n\nwindowTy" +
      "pe\030\004 \002(\t\"\266\001\n\017QuickWidgetInfo\022\020\n\010widgetID" +
      "\030\001 \002(\r\022\r\n\005title\030\002 \002(\t\022\017\n\007titleID\030\003 \002(\t\022\014" +
      "\n\004type\030\004 \002(\t\022\017\n\007visible\030\005 \002(\r\022\014\n\004text\030\006 " +
      "\002(\t\022\r\n\005state\030\007 \002(\r\022\017\n\007enabled\030\010 \002(\010\022$\n\004r" +
      "ect\030\t \002(\0132\026.scope.QuickWidgetRect\"F\n\017Qui" +
      "ckWidgetRect\022\t\n\001x\030\001 \002(\r\022\t\n\001y\030\002 \002(\r\022\r\n\005wi" +
      "dth\030\003 \002(\r\022\016\n\006height\030\004 \002(\r\"F\n\023QuickWidget",
      "InfoList\022/\n\017quickwidgetList\030\001 \003(\0132\026.scop" +
      "e.QuickWidgetInfo\"a\n\021QuickWidgetSearch\022)" +
      "\n\twindow_id\030\001 \002(\0132\026.scope.DesktopWindowI" +
      "D\022\023\n\013search_type\030\002 \002(\t\022\014\n\004data\030\003 \002(\t\"#\n\017" +
      "DesktopWindowID\022\020\n\010windowID\030\001 \002(\r\"A\n\021Des" +
      "ktopWindowList\022,\n\nwindowList\030\001 \003(\0132\030.sco" +
      "pe.DesktopWindowInfoB8\n#com.opera.core.s" +
      "ystems.scope.protosB\017DesktopWmProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_scope_DesktopWindowInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_scope_DesktopWindowInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_DesktopWindowInfo_descriptor,
              new java.lang.String[] { "WindowID", "Title", "TitleID", "WindowType", },
              com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.class,
              com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowInfo.Builder.class);
          internal_static_scope_QuickWidgetInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_scope_QuickWidgetInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_QuickWidgetInfo_descriptor,
              new java.lang.String[] { "WidgetID", "Title", "TitleID", "Type", "Visible", "Text", "State", "Enabled", "Rect", },
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.class,
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfo.Builder.class);
          internal_static_scope_QuickWidgetRect_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_scope_QuickWidgetRect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_QuickWidgetRect_descriptor,
              new java.lang.String[] { "X", "Y", "Width", "Height", },
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.class,
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetRect.Builder.class);
          internal_static_scope_QuickWidgetInfoList_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_scope_QuickWidgetInfoList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_QuickWidgetInfoList_descriptor,
              new java.lang.String[] { "QuickwidgetList", },
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList.class,
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetInfoList.Builder.class);
          internal_static_scope_QuickWidgetSearch_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_scope_QuickWidgetSearch_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_QuickWidgetSearch_descriptor,
              new java.lang.String[] { "WindowId", "SearchType", "Data", },
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch.class,
              com.opera.core.systems.scope.protos.DesktopWmProtos.QuickWidgetSearch.Builder.class);
          internal_static_scope_DesktopWindowID_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_scope_DesktopWindowID_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_DesktopWindowID_descriptor,
              new java.lang.String[] { "WindowID", },
              com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.class,
              com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowID.Builder.class);
          internal_static_scope_DesktopWindowList_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_scope_DesktopWindowList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_scope_DesktopWindowList_descriptor,
              new java.lang.String[] { "WindowList", },
              com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList.class,
              com.opera.core.systems.scope.protos.DesktopWmProtos.DesktopWindowList.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
