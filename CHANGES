v0.8    (not released yet)

  [API CHANGES]

  * OperaDriver now uses temporary profile and random port by default.
    This breaks backwards-compatibility with Opera < 11.60.  Please set
    capabilities opera.profile to "" (empty string) and opera.port to -1
    for it to not use a temporary profile and the default port (7001).
    (stuartk)

  * Updated Selenium dependency to 2.12.0.  (andreastt)

  * Throwing UnsupportedCommandException rather than a
    WebDriverException in OperaExec, so that it can be recovered.
    (andreastt)

  [NEW FEATURES]

  * EcmascriptService is now used by default in OperaDriver, instead of
    EcmaScriptDebugger.  This means any injected JavaScript now
    potentially goes through JIT, enabling the JIT compiler inside the
    browser.  (stuartk)

  * Added "compile_protos" target to Ant build file for compiling proto
    files to Java classes.  (stuartk)

  * Added support for frame switching.  (stuartk)

  * Introducing OperaArguments (with accompanying OperaArgument,
    OperaCoreArgument and OperaDesktopArgument) which defines a joint
    interface for interacting with arguments to various kinds of Opera
    products.  (andreastt)

  * OperaProduct keeps a list of all Opera products.  (andreastt)

  [ENHANCEMENTS]

  * Update EcmascriptService to be more similar to EcmaScriptDebugger.
    (stuartk)

  * Abstracted RuntimeNode from EcmaScriptDebugger into its own class so
    that it can be reused in EcmascriptService.  (stuartk)

  * Move methods common to EcmaScriptDebugger and EcmascriptService to a
    new class, AbstractEcmascriptService.

  * Replacing Apache Commons IO library calls with Guava (Simon Stewart,
    andreastt)

  * Upgraded from using OperaDriverSettings to using DesiredCapabilities
    in OperaDesktopDriver.  (andreastt)

  * The launchers have now been moved to a separate JAR,
    operalaunchers-*.jar, effectively removing the need to traverse the
    repo when running from source in SpartanRunner.  (andreastt)

  * OperaLauncherRunner made separate from OperaRunner.  OperaRunner now
    implements a Java native way of launching Opera.  (andreastt)

  [BUG FIXES]

  * Use the passed idle argument, not forcing idle to be true when
    calling setUseOperaIdle().  (danielb)

  * Since -pd is ignored by core builds, we must for some reason send
    -autotestmode last so that it doesn't consider the temporary profile
    to be the starting URL.  (andreastt)

  * Fix for making sure we create runtimes when we try to find them,
    instead of when we try to update the runtimes in EcmascriptService.
    (stuartk)

  * getWindowHandles() now gives names to windows without names.
    (stuartk)

  * Fix for NullPointerException if both window name and title are null
    in OperaDriver.window().  (stuartk)

  * Fix for a better way to verify whether EcmascriptService is
    available.  (stuartk)

  * Catch invalid runtime exception for EcmascriptService.  (stuartk)

  * Now logging which status we receive from the launcher.  (andreastt)

  * Doing all port guessing in OperaRunnerSettings since it's specific
    to launching Opera.  (andreastt)

  * Making sure Capabilities and OperaRunnerSettings are synchronized on
    launch.  (andreastt)

  [TESTS]

  * Added tests for VersionUtils comparison.  (dturkoglu)

  * Removed irrelevant tests, corrected misleading pass conditions.
    (andreastt, stuartk)

  * Logging level when running tests is now set to FINE.  (stuartK)

  * Assert.assert* calls have now been replaced by static imports for
    JUnit tests.  (ajay, andreastt)

  * Added tests for all new code added in this version.  (andreastt)

  * Added method for setting the launcher manually to
    OperaLauncherRunnerSettings.  This should never be used for other
    purposes than testing.  (andreastt)

  * Added new @Ignore annotation which lets you ignore a test based on
    product and/or platform.  (andreastt)

  * Corrected ignores for core- and desktop-specific tests.  (andreastt)

  * Reworked tests to use OperaDriverTestCase as a base.  (andreastt)

  [OTHER]

  * Added descriptions for all packages.  (stuartk)

  * A lot of documentation added to various places.  (stuartk,
    andreastt)

  * Fixes for documentation in OperaDesktopDriver.  (andreastt)

  * Added IntelliJ run configurations for various tests.  (andreastt)

  * Removed reference to pkg/ as a library in IntelliJ configuration.
    (andreastt)


v0.7.3    2011-09-19

  [API CHANGES]

  * Update Selenium JAR to 2.6.0.  (Ajay Kemparaj)

  * Update the protobuf library from 2.3.0 to 2.4.1 and regenerating all
    Proto files.  (stuartk)

  * If OPERA_PATH or OPERA_LAUNCHER are set to invalid paths, we will now fail
    instead of attempting to recover by guessing Opera's path.  (andreastt)

  [NEW FEATURES]

  * Add support for OperaDriver.switchTo().frame(WebElement).  (stuartk)

  [BUG FIXES]

  * Fix bug preventing switching to frames beneath the current one.  (stuartk)

  * Fix for switching to sub-sub-frames.  (stuartk)

  * Fix getAttribute("value") on option element.  (takahah)

  [TESTS]

  * Ignore failing tests.  (stuartk)

  [OTHER]

  * Major refactoring of OperaPaths.  (andreastt)

  * Better exception if failing to start the launcher on Windows, explaining
    Visual C++ dependency.  (andreastt)

  * Add script to compile Opera .proto files.  (stuartk)

  * Add .proto file for Opera launcher.  (stuartk)

  * Lowering error logging level for key errors.  (andreastt)

  * Update Selenium atoms to r13805.  (stuartk)

  * Add documentation for some internal methods.  (stuartk)

  * If running OperaDriver from the source directory it will now find the
    launcher in the launcher/ directory.  (andreastt)

  * Update OperaWebElement.saveScreenshot() to use FileChannels.  (Ajay Kemparaj)


v0.7.2    2011-09-08

  [API CHANGES]

  * DefaultDriverFactory in Selenium expects a Capabilities type constructor
    argument rather than DesiredCapabilities.  OperaDriver now uses Capabilities
    instead to match the other WebDriver implementations.  This fixes various
    problems related to remote driving.  (andreastt)

  * The capability "opera.binary_profile" has been renamed to "opera.product".
    (andreastt)

  [BUG FIXES]

  * Fix OperaWebElement.getLocation for SVG documents.  (stuartk)

  * -autotestmode, -debugproxy and -pd arguments are now sent to Opera before
    unwrapping the arbitrary list of arguments sent by user.  (andreastt)

  * Sanitizing capabilities sent across the wire, as Ruby will sent us Long's
    for Integer's which are not easily converted in Java.  (andreastt)

  [TESTS]

  * Correct checking for Windows platform in tests.  (stuartk)

  * Updated various tests.  (andreastt)

  [OTHER]

  * OperaWebElement now has its own logger.  (stuartk)

  * Java code refactoring.  (ajayk)


v0.7.1    2011-09-06
 
  [API CHANGES]

  * Remove deprecated method OperaDriver.stop().  (andreastt)

  * Remove deprecated method OperaDriver.closeAll().  (andreastt)

  * Remove OperaDriver.convertByToAtom() as the WebDriver atoms now support
    getting locators by nice wire strings.  (andreastt)

  * Remove OperaDriver.getProduct(), .getOS(), .getBinaryPath(),
    .getCoreVersion(), .getUserAgent() and .getPID() and replace with
    OperaDriver.utils().*  (andreastt)

  [BUG FIXES]

  * Make OperaWebElement.sendKeys enter text at the end when an input has
    default text.  (stuartk)

  * Clear Should only clear editable and enabled elements.  (ajayk)

  * Call services.shutdown(), as .quit() will also shut down Opera even if
    'opera.no_quit' is set to true.  (andreastt)

  [NEW FEATURES]

  * Add backwards-compat support for Window Manager 2.0 (for Opera Mobile).
    (stuartk)

  [OTHER]

  * Cleaning up logging in OperaLauncherRunner, OperaLauncherBinary,
    OperaLauncherProtocol, StpConnection, ScopeServices.  (andreastt)

  * Documenation and formatting fixes.  (andreastt)

  * Updated the atoms.  (andreastt)


v0.7    2011-09-02

  [API CHANGES]

  * Support the use of DesiredCapabilities, instead of OperaDriverSettings.
    OperaDriverSettings is still supported for backward compatibility, but
    will be removed in the next point version (0.8).  (stuartk)

  * Update Selenium jar to 2.5.0.

  * Remove OperaDriver.mouseEvent() method. Use the advanced interaction API
    instead. Update OperaExec to allow several mouse keys to be pressed at once.
    (andreastt)

  * Updated SocketMonitor to not be a singleton, so that connections to
    multiple instances of Opera can be maintained.  (stuartk)

  * Renamed OperaPaths.getOperaLauncherPath() to extractLauncher(path) to better match
    what the method is actually doing.  (andreastt)

  * Remove OperaDriver.shutdown().  (stuartk)
 
  [NEW FEATURES]

  * Support DesiredCapabilities. Capabilities include "opera.binary" and
    "opera.arguments" amongst others. See the top of the OperaDriver class
    for all of them.  (stuartk)

  * Support the "personal directory", `-pd`, flag with the "opera.profile"
    capability. Currently only available on Linux Opera builds.

  * Add "opera.port" capability to set the port that Opera communicates with
    driver on. Allows multiple instances of Opera to be run at once. Requires
    the `-debugproxy` flag, which is not yet available in current versions
    of Opera.  (stuartk)

  * Add capability to set the logging level and file with "opera.logging.level"
    and "opera.logging.file".  (andreastt)

  * Updated Linux launcher to support the `-profile` argument, to specify
    which build profile we are using (Note: this ISN'T the Opera user profile).
    (Iaroslav Tymchenko)

  * Display the command used to start Opera when it exits immediately (usually
    due to bad command line arguments).  (stuartk)

  [BUG FIXES]

  * Correct LEFT_CONTROL enum in OperaKeys to make code such as
    `action.sendKeys(Keys.CONTROL + "c")` work.  (stuartk)

  * Escape double quotes instead of single quotes in findElementsBy* methods.

    Fixes the problems with pre-escaped strings sent from selenium-webdriver.
    (andreastt)

  * Fix for bug DSK-344905; Opera should not quit after testrun with noquit
    option (Karianne Ekern)

  * Wait between two double clicks so that Opera doesn't interpret it as as a
    quadruple-click.  (andreastt)

  * Throw InvalidSelectorException when selectors are invalid.  (stuartk)

  * Use OpenURL command in new Window Manager service. Fixes case where loading
    a page in a new window would cause a ResponseNotReceivedException.  (stuartk)

  * Don't timeout when a window is closed by Javascript.  (stuartk)

  * Check services isn't null before shutting it down.  (stuartk)
 
  [TESTS]

  * Add tests for modifier keys.  (stuartk)

  * Ignore some launcher tests on Windows.  (stuartk)

  * Skip selftest tests when service isn't supported.  (stuartk)

  * Add tests for Profile and Port capabilities.  (stuartk)

  [OTHER]

  * Update build.xml to target Java 5/1.5.  (stuartk)

  * Compile tests to the bin/ directory, rather than the tests/ directory.
    (andreastt)

  * Reduce the logging level from FINE to FINER or FINEST for noisy log
    messages.  (stuartk)

  * Update Window Manager service from 2.0 to 2.1.  (stuartk)


v0.6.1    2011-08-29

  [API CHANGES]

  * Remove OperaDriver.mouseEvent().  (andreastt)

  * Switch order and type of arguments to OperaExec.mouseAction().  (andreastt)

  * Update Selenium jar to r13628, to include double-click fix in r13592.
    (andreastt)

  [BUG FIXES]

  * Wait in between sending double-click events so that Opera does not think
    that it is a quadruple-click.  (andreastt)

  [TESTS]

  * Fix tests to not use OperaDriver.mouseEvent().  (andreastt)


v0.6    2011-08-03

  [API CHANGES]

  * Add complete support for the Advanced User Interactions API:

      <URI:http://code.google.com/p/selenium/wiki/AdvancedUserInteractions>

  * OperaWebElement.getLocation() now returns the location in the DOM, rather
    than in the viewport. To get viewport location use
    `getCoordinates().getLocationInViewPort()`.  (andreastt, stuartk)

  * Use Selenium atoms (see below).

  * Update Selenium jar to 2.3.0.

  [NEW FEATURES]

  * Added ability to navigate menus in Opera Desktop.  (Karianne Ekern,
    Adam Minchinton)

  * Add selftest service.  (Arne Skjærholt)

  * Use atoms from the Selenium project instead of our own custom JS for:

    - Finding elements from OperaDriver and OperaWebElement
    - Getting attributes, style, location and size of OperaWebElement
    - Getting displayed, enabled and selected state of OperaWebElement
    - Submitting and toggling OperaWebElement
    - Getting the text of OperaWebElement

    (stuartk)

  * If available show Ecmascript error message in the exception.  (stuartk)

  * Correctly return WebElements when they are in another JS object, such as
    an array.  (stuartk)

  [BUG FIXES]

  * OperaDriver.navigate().frame(String) now switches to frames with "."s in
    rather than sub-frames.  (stuartk)

  [TESTS]

  * Add tests for selftest.  (Arne Skjærholt)

  * Add test for finding sub-elements on a OperaWebElement.  (stuartk)

  * Add test for executing Javascript returning an array of elements.  (stuartk)

  [OTHER]

  * Add UMS protobuf file. Regenerate the Java code (no effective changes).
    (stuartk)

  * Move OperaMouse and OperaKeyboard into separate classes.  (andreastt)

  * Update pom.xml to contain all needed info.  (stuartk)


v0.5.2    2011-07-01

  [BUG FIXES]

  * Escape quotes for strings passed to find*By* methods on OperaWebElement
    (andreastt)

  * Fix for click()ing/toggling multiple-select <option> elements (stuartk)


v0.5.1    2011-06-27

  [BUG FIXES]

  * Core Scope service no longer required, to support earlier Opera versions.
    (stuartk)

  * Shutdown Scope services in alternate way to support earlier Opera versions.
    (stuartk)


v0.5    2011-06-26

  [KNOWN ISSUES]

  * Requires Administrator privileges on Windows Vista and 7 when Opera is
    installed in the default location (Program Files).  See README.txt for
    workarounds.

  * getScreenshotAs() only returns image data of the current viewport, other
    parts of the image will be black.

  [API CHANGES]

  * Add getOS(), getProduct(), getBinaryPath(), getUserAgent(), getPID() to
    OperaDriver.  (andreastt)

  * Implement TakesScreenshot.  (stuartk)

  * Extend RemoteWebDriver.  (stuartk)

  * Implement HasDevices (Advanced interaction API). Not fully tested, use
    with caution! (stuartk)

  * Add listAllPrefs() method on OperaDriver.  (stuartk)

  * Change listPrefs() to return a map of preference name to Pref object,
    instead of a list of Pref objects.

  * Update to selenium-java-2.0rc3

  [NEW FEATURES]

  * Add ability to get meta-information about Opera when using Opera 11.50 or
    greater (see   [API CHANGES]).  (andreastt)

  * Selenium APIs implemented: RemoteWebDriver, TakesScreenshot, HasDevices
    (stuartk)

  * Added maven/pom.xml.  (michael tamm)

  [ENHANCEMENTS]

  * Forward crash status along with the screenshot reply (danielb)

  * Capture more logging (danielb)

  * Add RemoteWebDriver example.  (stuartk)

  [BUG FIXES]

  * Fix click() method in OperaWebElement for OPTION elements.  (stuartk)

  * Escape quotes for strings passed to find*By* methods.  (stuartk, andreastt)

  [TESTS]

  * Ignore failing screenshot test.  (stuartk)

  * Add test for quote escaping.  (andreastt)

  * Added tests for getting preferences.  (andreastt)

  [OTHER]

  * Rename released jar from webdriver-opera-${version}.jar to
    operadriver-${version}.jar.  (stuartk)

  * Include source jar in release zip file.  (stuartk)


v0.4.3    2011-06-14

  [API CHANGES]

  * Update to a snapshot of selenium post 2.0rc2. This removes
    RenderedWebElement, and OperaWebElement.getvalue().  Use
    getAttribute("value") instead.

  [NEW FEATURES]

  * Add OperaDriver.setUseOperaIdle(boolean).

  [ENHANCEMENTS]

  * Check Opera Actions case-insensitively.

  [BUG FIXES]

  * Keep closer track of the Opera Idle timeout for cases where we don't
    receive the idle message.

  * Fix socket timeout.

  [TESTS]

  * Remove consistently failing tests "testFlash" and "testReflow".


v0.4.2    2011-05-19

  [NEW FEATURES]

  * Add ability to get source of XML page.

  * Read value of the OPERA_ARGS environment variable.  This is concatenated
    with any arguments set in OperaDriverSettings.setOperaBinaryArguments().

  [ENHANCEMENTS]

  * Reduce page load timeout to 30 seconds from 60s.

  * Remove check for pressing already pressed key.

  [BUG FIXES]

  * Distinguish between upper- and lower-case attributes in XHTML documents.

  * Selenium test suite fixes:

    - Fix isDisplayed on map elements
    - Only switch to frames underneath the current frame
    - Return value property instead of attribute in getAttribute
    - Don't press and release shift to type captials if it's already down
    - Hold down shift and control keys in sendKeys

  [TESTS]

  * Remove repeating keys tests.


v0.4.2.pre7    2011-05-06

  [ENHANCEMENTS]

  * Do not use idle detection unless the core version is >= 1.1.

  * Call quit if init fails in OperaDriver.

  * Show the output from launcher when using fine logging.

  * Set socket timeout also for new sockets.

  [BUG FIXES]

  * OperaWebElement.isDisplayed() returns true for <option> elements whose
    <select> parent is displayed.

  * OperaWebElement.getText() collapses two spaces in two adjacent inline
    elements.

  * Don't switch to first frame on a page with a frameset.

  * Fix for communication with Opera being faster than Opera.


v0.4.2.pre6    2011-04-29

  [API CHANGES]

  * Un-deprecate OperaDriverSettings.getNoQuit/setNoQuit and UmsEventHandler.

  * Deprecate OperaDriver.shutdown().

  * OperaDriver.quit() replaces OperaDriver.shutdown().

  * Deprecate OperaDriver.closeAll(), .executeActions(), .stop().

  * Deprecate RenderedWebElement methods on OperaWebElement.

  * Deprecate OperaWebElement.hover().

  * Add OperaWebElement.mouseOver() (replace .hover()).

  * Update Selenium JAR to code from SVN revision 12071.

  [NEW FEATURES]

  * Add ScopeServices.captureOperaIdle(). Enables the tracking of any Idle
    events received between now and when you call waitForOperaIdle().

  * Add OperaWebElement.saveScreenshot() to match behaviour of
    OperaDriver.saveScreenshot() method.

  * Add timeout for Opera to connect to Driver. If exceeded an exception is thrown.

  * Throw exception if Opera quits immediately after launch, for example if it
    doesn't recognise arguments.

  [ENHANCEMENTS]

  * Regenerated desktopwm protos from updated service with new griditem and
    gridview types (Desktop).

  * Make specifying or constructing buttons by position possible (Desktop).

  * Add type checking to retrieval algorithm for widgets (Desktop).

  [BUG FIXES]

  * Setting operaBinaryArguments to null no longer causes a crash.

  * Correctly shutdown when Opera crashes (Desktop).

  * Updated launcher-linux-x86_64 to work with an older libc library.

  * Updated OperaWebElement to pass more Selenium tests:

    - OperaWebElement implements WrapsDriver
    - OperaWebElement uses InvalidElementStateExceptions
    - Add more checks for disabled or hidden elements
    - OperaWebElement.sendKeys now sends 'special' keys when part of a string

  [TESTS]

  * Move test fixture setup into own function to allow use in tests that do
   not start driver.

  * Improved Idle tests.

  [OTHER]

  * Add the Scope .proto files to the repository.


v0.4.2.pre5    2011-03-14

  [API CHANGES]

  * Removed preference paths from OperaDriverSettings.

  [NEW FEATURES]

  * New settings added to OperaDriverSettings:

    - Disable Opera Idle
    - Autostart setting to replace passing `null` into OperaDriver().

  * Always pass `-autotestmode` in to Opera. This will cause versions of Opera
    which do not support this flag to fail to start. Use a manual start instead.

  [ENHANCEMENTS]

  * Increase page load timeout from 5 seconds to 60 seconds.

  * Merged desktop changes.

  * Disallow deletion of default main user profile.

  * Do not use pageload timeout for window events

  * Reduce level of Opera Idle logging output.

  * Correctly re-extract launchers when they have changed inside the JAR.

  * Buildfile updated to make testing and releasing easier.

    - Version number is obtained from `git describe`.
    - `test` target generates reports.
    - Individual tests can be run using -Dclass=com.opera.core.systems.<Class>
     where <Class> is one of the classes under test/.
    - Add launchers to jar in `jar` task, rather than executing `zip`.
     Compatibility with Windows.

  [BUG FIXES]

  * Update launchers to die after losing their connection to OperaDriver. Fix
    for launchers on Windows lingering.

  * Fixes for some "No response in a timely fashion" exceptions.  Prevent
    buffer under-runs on slow connections.

  [TESTS]

  * Added and updated unit tests for:
 
    - Frames
    - OperaDriver core
    - OperaLauncherRunner
    - Opera path guessing
    - Opera Idle
